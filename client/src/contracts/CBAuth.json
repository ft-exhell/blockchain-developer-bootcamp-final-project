{
  "contractName": "CBAuth",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daiAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethUsdOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initSubscriptionPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        }
      ],
      "name": "Refunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        }
      ],
      "name": "Subscribed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subscriptionPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "subscriptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        },
        {
          "internalType": "enum CBAuth.Currency",
          "name": "currency",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculateETHPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "subscribeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "subscribeDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subscribeLifetime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        }
      ],
      "name": "isSubscribed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "requestRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_subscriptionPrice",
          "type": "uint256"
        }
      ],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daiAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethUsdOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initSubscriptionPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"Subscribed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"calculateETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"isSubscribed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscribeDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscribeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscribeLifetime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"subscriptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"enum CBAuth.Currency\",\"name\":\"currency\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subscriptionPrice\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Anton Tarasov\",\"details\":\"Lifetime subsription via an NFT minter will be implemented\",\"events\":{\"Refunded(address)\":{\"params\":{\"subscriber\":\"Subscriber ETH address\"}},\"Subscribed(address)\":{\"params\":{\"subscriber\":\"Subscriber ETH address\"}}},\"kind\":\"dev\",\"methods\":{\"calculateETHPrice()\":{\"details\":\"Uses Chainlink data to calculate price of a subscription, DAI has 18 decimals, so multiplying the price by 1e18\"},\"constructor\":{\"details\":\"Had to use USDT contract on Rinkeby instead of DAI\",\"params\":{\"daiAddress\":\"Address of the DAI contract\",\"ethUsdOracle\":\"Address of Chainlink data feed\",\"initSubscriptionPrice\":\"Sets initial price of a subscription in USD w/o decimals\"}},\"isSubscribed(address)\":{\"params\":{\"subscriber\":\"ETH address being checked\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"requestRefund()\":{\"details\":\"Uses checks-effects-interactions pattern to prevent re-entrancy\"},\"subscribeDAI()\":{\"details\":\"Prevent an unnecessary call to DAI contract in the case of not enough funds with \\\"require\\\"\"},\"subscribeETH()\":{\"details\":\"Accepts only the exact amount to avoid the need to send funds back\"},\"subscribeLifetime()\":{\"details\":\"The NFT minter will be a separate contract\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePrice(uint256)\":{\"params\":{\"_subscriptionPrice\":\"New subscription price\"}},\"withdraw()\":{\"details\":\"Prevents unnecessary call to DAI if the contract doesn't hold DAI\"}},\"stateVariables\":{\"ETHUSDPriceFeed\":{\"details\":\"Chainlink interface for getting the price of ETH in USD\"},\"dai\":{\"details\":\"IERC20 interface for interacting with DAI\"},\"subscriptionPrice\":{\"details\":\"Assigned in constructor\"},\"year\":{\"details\":\"Lengths of subscription and grace period in seconds for tracking expiration & refund eligibility\"}},\"title\":\"Crypto Briefing User Authentication\",\"version\":1},\"userdoc\":{\"events\":{\"Refunded(address)\":{\"notice\":\"Emitted when a person gets a refund\"},\"Subscribed(address)\":{\"notice\":\"Emitted when a person is subscribed for the service\"}},\"kind\":\"user\",\"methods\":{\"isSubscribed(address)\":{\"notice\":\"Checks whether an address is subscribed\"},\"requestRefund()\":{\"notice\":\"Checks whether an address is subscribed and the grace period of 30 days isn't over, then refunds\"},\"subscribeDAI()\":{\"notice\":\"Checks whether a sender has enough DAI and if yes accepts payment and makes a new subscription\"},\"subscribeETH()\":{\"notice\":\"Checks whether a sender has enough ETH and if yes accepts payment and makes a new subscription\"},\"subscribeLifetime()\":{\"notice\":\"Mint an NFT that represents a lifetime subscription\"},\"subscriptionPrice()\":{\"notice\":\"Subscription price is in USD\"},\"subscriptions(address)\":{\"notice\":\"Information about each ETH address subscription, all zeroes means \\\"not subscribed\\\"\"},\"updatePrice(uint256)\":{\"notice\":\"Lets the owner to update the yearly price in USD\"},\"withdraw()\":{\"notice\":\"Lets the owner to withdraw funds\"}},\"notice\":\"Enables users to get access to SIMETRI via ETH or a stablecoin\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CBAuth.sol\":\"CBAuth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47\",\"dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/CBAuth.sol\":{\"keccak256\":\"0xf562be3b0577f77923919e58b6ea11258539b113efd14080f931bd27ab5ffb05\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d42273d9760859c5cfca8ee69ef2c8ec3e3103a49915c1a1f89a8da65fdc0272\",\"dweb:/ipfs/QmTjy6xvVN1zAi1wBjxBRFgWMq4wLuKk4uxaLkQcF8H4Kh\"]}},\"version\":1}",
  "bytecode": "0x60806040526301e1338060025562278d006003553480156200002057600080fd5b506040516200234f3803806200234f8339818101604052810190620000469190620001f2565b620000666200005a620000f860201b60201c565b6200010060201b60201c565b82600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550505050620002ba565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001d58162000286565b92915050565b600081519050620001ec81620002a0565b92915050565b6000806000606084860312156200020857600080fd5b60006200021886828701620001c4565b93505060206200022b86828701620001c4565b92505060406200023e86828701620001db565b9150509250925092565b600062000255826200025c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002918162000248565b81146200029d57600080fd5b50565b620002ab816200027c565b8114620002b757600080fd5b50565b61208580620002ca6000396000f3fe6080604052600436106100c25760003560e01c8063bdc8e54c1161007f578063d5cef13311610059578063d5cef1331461020a578063e210e0ef14610221578063f046395a1461022b578063f2fde38b1461026a576100c2565b8063bdc8e54c146101b1578063c2e06367146101dc578063c57396d3146101f3576100c2565b80633ccfd60b146100c75780636de4f86e146100de578063715018a6146101095780638d6cc56d146101205780638da5cb5b14610149578063b92ae87c14610174575b600080fd5b3480156100d357600080fd5b506100dc610293565b005b3480156100ea57600080fd5b506100f36105d3565b6040516101009190611cc1565b60405180910390f35b34801561011557600080fd5b5061011e610607565b005b34801561012c57600080fd5b506101476004803603810190610142919061174b565b61068f565b005b34801561015557600080fd5b5061015e610715565b60405161016b9190611b0b565b60405180910390f35b34801561018057600080fd5b5061019b600480360381019061019691906116f9565b61073e565b6040516101a89190611b86565b60405180910390f35b3480156101bd57600080fd5b506101c66107e9565b6040516101d39190611cc1565b60405180910390f35b3480156101e857600080fd5b506101f16107ef565b005b3480156101ff57600080fd5b50610208610c03565b005b34801561021657600080fd5b5061021f610c05565b005b610229611142565b005b34801561023757600080fd5b50610252600480360381019061024d91906116f9565b6113c1565b60405161026193929190611cdc565b60405180910390f35b34801561027657600080fd5b50610291600480360381019061028c91906116f9565b6113f8565b005b61029b6114f0565b73ffffffffffffffffffffffffffffffffffffffff166102b9610715565b73ffffffffffffffffffffffffffffffffffffffff161461030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690611c61565b60405180910390fd5b6000610319610715565b73ffffffffffffffffffffffffffffffffffffffff164760405161033c90611af6565b60006040518083038185875af1925050503d8060008114610379576040519150601f19603f3d011682016040523d82523d6000602084013e61037e565b606091505b50509050806103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990611ba1565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161041f9190611b0b565b60206040518083038186803b15801561043757600080fd5b505afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190611774565b11156105d057600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161050f9190611b0b565b60206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190611774565b6040518363ffffffff1660e01b815260040161057c929190611b5d565b602060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190611722565b505b50565b6000806105de6114f8565b905080670de0b6b3a76400006001546105f79190611e20565b6106019190611def565b91505090565b61060f6114f0565b73ffffffffffffffffffffffffffffffffffffffff1661062d610715565b73ffffffffffffffffffffffffffffffffffffffff1614610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90611c61565b60405180910390fd5b61068d60006115b7565b565b6106976114f0565b73ffffffffffffffffffffffffffffffffffffffff166106b5610715565b73ffffffffffffffffffffffffffffffffffffffff161461070b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070290611c61565b60405180910390fd5b8060018190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414806107d1575042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154105b156107df57600090506107e4565b600190505b919050565b60015481565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541480610881575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154105b6108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790611be1565b60405180910390fd5b670de0b6b3a76400006001546108d69190611e20565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109319190611b0b565b60206040518083038186803b15801561094957600080fd5b505afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611774565b10156109c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b990611c21565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670de0b6b3a7640000600154610a189190611e20565b6040518463ffffffff1660e01b8152600401610a3693929190611b26565b602060405180830381600087803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611722565b5060025442610a979190611d2f565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836001811115610b69577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550670de0b6b3a7640000600154610b849190611e20565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507fa88fac53823b534c72d6958345adbe6801e072750d83b490d52ebbac51473a6333604051610bf99190611b0b565b60405180910390a1565b565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141580610c98575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154115b610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce90611ca1565b60405180910390fd5b42600354600254600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610d2b9190611e7a565b610d359190611d2f565b11610d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c90611c81565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060006001811115610e86577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166001811115610f0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610fc65760003373ffffffffffffffffffffffffffffffffffffffff1682604051610f3a90611af6565b60006040518083038185875af1925050503d8060008114610f77576040519150601f19603f3d011682016040523d82523d6000602084013e610f7c565b606091505b5050905080610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790611c41565b60405180910390fd5b5061113f565b600180811115610fff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166001811115611087577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561113e57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016110ea929190611b5d565b602060405180830381600087803b15801561110457600080fd5b505af1158015611118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113c9190611722565b505b5b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414806111d4575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154105b611213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120a90611be1565b60405180910390fd5b61121b6105d3565b341461125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125390611c01565b60405180910390fd5b6002544261126a9190611d2f565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083600181111561133c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555034600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507fa88fac53823b534c72d6958345adbe6801e072750d83b490d52ebbac51473a63336040516113b79190611b0b565b60405180910390a1565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060020154905083565b6114006114f0565b73ffffffffffffffffffffffffffffffffffffffff1661141e610715565b73ffffffffffffffffffffffffffffffffffffffff1614611474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146b90611c61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114db90611bc1565b60405180910390fd5b6114ed816115b7565b50565b600033905090565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561156357600080fd5b505afa158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b919061179d565b5050509150506305f5e100816115b19190611d85565b91505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061168a81611fdc565b92915050565b60008151905061169f81611ff3565b92915050565b6000815190506116b48161200a565b92915050565b6000813590506116c981612021565b92915050565b6000815190506116de81612021565b92915050565b6000815190506116f381612038565b92915050565b60006020828403121561170b57600080fd5b60006117198482850161167b565b91505092915050565b60006020828403121561173457600080fd5b600061174284828501611690565b91505092915050565b60006020828403121561175d57600080fd5b600061176b848285016116ba565b91505092915050565b60006020828403121561178657600080fd5b6000611794848285016116cf565b91505092915050565b600080600080600060a086880312156117b557600080fd5b60006117c3888289016116e4565b95505060206117d4888289016116a5565b94505060406117e5888289016116cf565b93505060606117f6888289016116cf565b9250506080611807888289016116e4565b9150509295509295909350565b61181d81611eae565b82525050565b61182c81611ec0565b82525050565b61183b81611f29565b82525050565b600061184e601283611d1e565b91507f4661696c656420746f20776974686472617700000000000000000000000000006000830152602082019050919050565b600061188e602683611d1e565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118f4601383611d1e565b91507f416c726561647920737562736372696265642e000000000000000000000000006000830152602082019050919050565b6000611934602483611d1e565b91507f506c656173652c207061792074686520657861637420616d6f756e7420696e2060008301527f4554482e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061199a601a83611d1e565b91507f596f7520646f6e2774206861766520656e6f756768204441492e0000000000006000830152602082019050919050565b60006119da601083611d1e565b91507f4661696c656420746f20526566756e64000000000000000000000000000000006000830152602082019050919050565b6000611a1a602083611d1e565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611a5a601383611d1e565b91507f477261636520506572696f6420456e6465642e000000000000000000000000006000830152602082019050919050565b6000611a9a600f83611d1e565b91507f4e6f7420737562736372696265642e00000000000000000000000000000000006000830152602082019050919050565b6000611ada600083611d13565b9150600082019050919050565b611af081611f09565b82525050565b6000611b0182611acd565b9150819050919050565b6000602082019050611b206000830184611814565b92915050565b6000606082019050611b3b6000830186611814565b611b486020830185611814565b611b556040830184611ae7565b949350505050565b6000604082019050611b726000830185611814565b611b7f6020830184611ae7565b9392505050565b6000602082019050611b9b6000830184611823565b92915050565b60006020820190508181036000830152611bba81611841565b9050919050565b60006020820190508181036000830152611bda81611881565b9050919050565b60006020820190508181036000830152611bfa816118e7565b9050919050565b60006020820190508181036000830152611c1a81611927565b9050919050565b60006020820190508181036000830152611c3a8161198d565b9050919050565b60006020820190508181036000830152611c5a816119cd565b9050919050565b60006020820190508181036000830152611c7a81611a0d565b9050919050565b60006020820190508181036000830152611c9a81611a4d565b9050919050565b60006020820190508181036000830152611cba81611a8d565b9050919050565b6000602082019050611cd66000830184611ae7565b92915050565b6000606082019050611cf16000830186611ae7565b611cfe6020830185611832565b611d0b6040830184611ae7565b949350505050565b600081905092915050565b600082825260208201905092915050565b6000611d3a82611f09565b9150611d4583611f09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d7a57611d79611f3b565b5b828201905092915050565b6000611d9082611edf565b9150611d9b83611edf565b925082611dab57611daa611f6a565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615611de457611de3611f3b565b5b828205905092915050565b6000611dfa82611f09565b9150611e0583611f09565b925082611e1557611e14611f6a565b5b828204905092915050565b6000611e2b82611f09565b9150611e3683611f09565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e6f57611e6e611f3b565b5b828202905092915050565b6000611e8582611f09565b9150611e9083611f09565b925082821015611ea357611ea2611f3b565b5b828203905092915050565b6000611eb982611ee9565b9050919050565b60008115159050919050565b6000819050611eda82611fc8565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000611f3482611ecc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611fd957611fd8611f99565b5b50565b611fe581611eae565b8114611ff057600080fd5b50565b611ffc81611ec0565b811461200757600080fd5b50565b61201381611edf565b811461201e57600080fd5b50565b61202a81611f09565b811461203557600080fd5b50565b61204181611f13565b811461204c57600080fd5b5056fea264697066735822122010d54a345e0663437ef4a97d0528f19a35fe420410b0e16d28b91267f0db520664736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063bdc8e54c1161007f578063d5cef13311610059578063d5cef1331461020a578063e210e0ef14610221578063f046395a1461022b578063f2fde38b1461026a576100c2565b8063bdc8e54c146101b1578063c2e06367146101dc578063c57396d3146101f3576100c2565b80633ccfd60b146100c75780636de4f86e146100de578063715018a6146101095780638d6cc56d146101205780638da5cb5b14610149578063b92ae87c14610174575b600080fd5b3480156100d357600080fd5b506100dc610293565b005b3480156100ea57600080fd5b506100f36105d3565b6040516101009190611cc1565b60405180910390f35b34801561011557600080fd5b5061011e610607565b005b34801561012c57600080fd5b506101476004803603810190610142919061174b565b61068f565b005b34801561015557600080fd5b5061015e610715565b60405161016b9190611b0b565b60405180910390f35b34801561018057600080fd5b5061019b600480360381019061019691906116f9565b61073e565b6040516101a89190611b86565b60405180910390f35b3480156101bd57600080fd5b506101c66107e9565b6040516101d39190611cc1565b60405180910390f35b3480156101e857600080fd5b506101f16107ef565b005b3480156101ff57600080fd5b50610208610c03565b005b34801561021657600080fd5b5061021f610c05565b005b610229611142565b005b34801561023757600080fd5b50610252600480360381019061024d91906116f9565b6113c1565b60405161026193929190611cdc565b60405180910390f35b34801561027657600080fd5b50610291600480360381019061028c91906116f9565b6113f8565b005b61029b6114f0565b73ffffffffffffffffffffffffffffffffffffffff166102b9610715565b73ffffffffffffffffffffffffffffffffffffffff161461030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690611c61565b60405180910390fd5b6000610319610715565b73ffffffffffffffffffffffffffffffffffffffff164760405161033c90611af6565b60006040518083038185875af1925050503d8060008114610379576040519150601f19603f3d011682016040523d82523d6000602084013e61037e565b606091505b50509050806103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990611ba1565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161041f9190611b0b565b60206040518083038186803b15801561043757600080fd5b505afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190611774565b11156105d057600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161050f9190611b0b565b60206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190611774565b6040518363ffffffff1660e01b815260040161057c929190611b5d565b602060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190611722565b505b50565b6000806105de6114f8565b905080670de0b6b3a76400006001546105f79190611e20565b6106019190611def565b91505090565b61060f6114f0565b73ffffffffffffffffffffffffffffffffffffffff1661062d610715565b73ffffffffffffffffffffffffffffffffffffffff1614610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90611c61565b60405180910390fd5b61068d60006115b7565b565b6106976114f0565b73ffffffffffffffffffffffffffffffffffffffff166106b5610715565b73ffffffffffffffffffffffffffffffffffffffff161461070b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070290611c61565b60405180910390fd5b8060018190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414806107d1575042600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154105b156107df57600090506107e4565b600190505b919050565b60015481565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541480610881575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154105b6108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790611be1565b60405180910390fd5b670de0b6b3a76400006001546108d69190611e20565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109319190611b0b565b60206040518083038186803b15801561094957600080fd5b505afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611774565b10156109c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b990611c21565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670de0b6b3a7640000600154610a189190611e20565b6040518463ffffffff1660e01b8152600401610a3693929190611b26565b602060405180830381600087803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611722565b5060025442610a979190611d2f565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836001811115610b69577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550670de0b6b3a7640000600154610b849190611e20565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507fa88fac53823b534c72d6958345adbe6801e072750d83b490d52ebbac51473a6333604051610bf99190611b0b565b60405180910390a1565b565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141580610c98575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154115b610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce90611ca1565b60405180910390fd5b42600354600254600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610d2b9190611e7a565b610d359190611d2f565b11610d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c90611c81565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060006001811115610e86577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166001811115610f0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610fc65760003373ffffffffffffffffffffffffffffffffffffffff1682604051610f3a90611af6565b60006040518083038185875af1925050503d8060008114610f77576040519150601f19603f3d011682016040523d82523d6000602084013e610f7c565b606091505b5050905080610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790611c41565b60405180910390fd5b5061113f565b600180811115610fff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166001811115611087577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561113e57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016110ea929190611b5d565b602060405180830381600087803b15801561110457600080fd5b505af1158015611118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113c9190611722565b505b5b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414806111d4575042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154105b611213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120a90611be1565b60405180910390fd5b61121b6105d3565b341461125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125390611c01565b60405180910390fd5b6002544261126a9190611d2f565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083600181111561133c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555034600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507fa88fac53823b534c72d6958345adbe6801e072750d83b490d52ebbac51473a63336040516113b79190611b0b565b60405180910390a1565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060020154905083565b6114006114f0565b73ffffffffffffffffffffffffffffffffffffffff1661141e610715565b73ffffffffffffffffffffffffffffffffffffffff1614611474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146b90611c61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114db90611bc1565b60405180910390fd5b6114ed816115b7565b50565b600033905090565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561156357600080fd5b505afa158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b919061179d565b5050509150506305f5e100816115b19190611d85565b91505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061168a81611fdc565b92915050565b60008151905061169f81611ff3565b92915050565b6000815190506116b48161200a565b92915050565b6000813590506116c981612021565b92915050565b6000815190506116de81612021565b92915050565b6000815190506116f381612038565b92915050565b60006020828403121561170b57600080fd5b60006117198482850161167b565b91505092915050565b60006020828403121561173457600080fd5b600061174284828501611690565b91505092915050565b60006020828403121561175d57600080fd5b600061176b848285016116ba565b91505092915050565b60006020828403121561178657600080fd5b6000611794848285016116cf565b91505092915050565b600080600080600060a086880312156117b557600080fd5b60006117c3888289016116e4565b95505060206117d4888289016116a5565b94505060406117e5888289016116cf565b93505060606117f6888289016116cf565b9250506080611807888289016116e4565b9150509295509295909350565b61181d81611eae565b82525050565b61182c81611ec0565b82525050565b61183b81611f29565b82525050565b600061184e601283611d1e565b91507f4661696c656420746f20776974686472617700000000000000000000000000006000830152602082019050919050565b600061188e602683611d1e565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118f4601383611d1e565b91507f416c726561647920737562736372696265642e000000000000000000000000006000830152602082019050919050565b6000611934602483611d1e565b91507f506c656173652c207061792074686520657861637420616d6f756e7420696e2060008301527f4554482e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061199a601a83611d1e565b91507f596f7520646f6e2774206861766520656e6f756768204441492e0000000000006000830152602082019050919050565b60006119da601083611d1e565b91507f4661696c656420746f20526566756e64000000000000000000000000000000006000830152602082019050919050565b6000611a1a602083611d1e565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611a5a601383611d1e565b91507f477261636520506572696f6420456e6465642e000000000000000000000000006000830152602082019050919050565b6000611a9a600f83611d1e565b91507f4e6f7420737562736372696265642e00000000000000000000000000000000006000830152602082019050919050565b6000611ada600083611d13565b9150600082019050919050565b611af081611f09565b82525050565b6000611b0182611acd565b9150819050919050565b6000602082019050611b206000830184611814565b92915050565b6000606082019050611b3b6000830186611814565b611b486020830185611814565b611b556040830184611ae7565b949350505050565b6000604082019050611b726000830185611814565b611b7f6020830184611ae7565b9392505050565b6000602082019050611b9b6000830184611823565b92915050565b60006020820190508181036000830152611bba81611841565b9050919050565b60006020820190508181036000830152611bda81611881565b9050919050565b60006020820190508181036000830152611bfa816118e7565b9050919050565b60006020820190508181036000830152611c1a81611927565b9050919050565b60006020820190508181036000830152611c3a8161198d565b9050919050565b60006020820190508181036000830152611c5a816119cd565b9050919050565b60006020820190508181036000830152611c7a81611a0d565b9050919050565b60006020820190508181036000830152611c9a81611a4d565b9050919050565b60006020820190508181036000830152611cba81611a8d565b9050919050565b6000602082019050611cd66000830184611ae7565b92915050565b6000606082019050611cf16000830186611ae7565b611cfe6020830185611832565b611d0b6040830184611ae7565b949350505050565b600081905092915050565b600082825260208201905092915050565b6000611d3a82611f09565b9150611d4583611f09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d7a57611d79611f3b565b5b828201905092915050565b6000611d9082611edf565b9150611d9b83611edf565b925082611dab57611daa611f6a565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615611de457611de3611f3b565b5b828205905092915050565b6000611dfa82611f09565b9150611e0583611f09565b925082611e1557611e14611f6a565b5b828204905092915050565b6000611e2b82611f09565b9150611e3683611f09565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e6f57611e6e611f3b565b5b828202905092915050565b6000611e8582611f09565b9150611e9083611f09565b925082821015611ea357611ea2611f3b565b5b828203905092915050565b6000611eb982611ee9565b9050919050565b60008115159050919050565b6000819050611eda82611fc8565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000611f3482611ecc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611fd957611fd8611f99565b5b50565b611fe581611eae565b8114611ff057600080fd5b50565b611ffc81611ec0565b811461200757600080fd5b50565b61201381611edf565b811461201e57600080fd5b50565b61202a81611f09565b811461203557600080fd5b50565b61204181611f13565b811461204c57600080fd5b5056fea264697066735822122010d54a345e0663437ef4a97d0528f19a35fe420410b0e16d28b91267f0db520664736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1477:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:7",
                "type": ""
              }
            ],
            "src": "7:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:7",
                "type": ""
              }
            ],
            "src": "156:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "416:485:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "471:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "464:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "437:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "446:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "433:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "458:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "429:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "426:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "488:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "503:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "507:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "532:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "578:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "589:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "574:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "574:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "598:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "542:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "532:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "626:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "641:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "655:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "645:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "671:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "717:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "728:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "713:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "713:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "737:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "681:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "681:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "671:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "765:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "780:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "794:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "784:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "810:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "856:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "867:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "852:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "852:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "876:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "820:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "820:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "810:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "370:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "381:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "393:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "401:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "409:6:7",
                "type": ""
              }
            ],
            "src": "305:596:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "952:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "962:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "991:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "973:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "962:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "934:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "944:7:7",
                "type": ""
              }
            ],
            "src": "907:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1054:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1064:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1079:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1086:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1075:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1075:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1064:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1036:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1046:7:7",
                "type": ""
              }
            ],
            "src": "1009:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1186:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1196:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1207:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1196:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1168:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1178:7:7",
                "type": ""
              }
            ],
            "src": "1141:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1267:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1324:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1333:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1336:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1326:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1326:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1326:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1290:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1315:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1297:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1297:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1287:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1287:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1280:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1280:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1277:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1260:5:7",
                "type": ""
              }
            ],
            "src": "1224:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1452:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1461:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1464:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1454:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1454:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1454:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1418:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1443:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1425:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1425:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1415:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1415:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1405:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1388:5:7",
                "type": ""
              }
            ],
            "src": "1352:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16853:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "7:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:7",
                "type": ""
              }
            ],
            "src": "152:137:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "357:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "367:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "382:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "376:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "367:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "424:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "398:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "398:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "398:32:7"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "335:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "343:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "351:5:7",
                "type": ""
              }
            ],
            "src": "295:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "494:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "504:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "526:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "513:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "504:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "569:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "542:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "542:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "542:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "472:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "480:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "488:5:7",
                "type": ""
              }
            ],
            "src": "442:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "650:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "660:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "675:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "669:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "669:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "660:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "718:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "691:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "691:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "691:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "628:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "636:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "644:5:7",
                "type": ""
              }
            ],
            "src": "587:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "798:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "808:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "823:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "817:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "808:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "865:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "839:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "839:32:7"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "776:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "784:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "792:5:7",
                "type": ""
              }
            ],
            "src": "736:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:196:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "995:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1004:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1007:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "997:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "997:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "997:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "970:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "979:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "966:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "991:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "959:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1021:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1036:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1050:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1040:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1065:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1100:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1111:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1096:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1096:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1120:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1075:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1075:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1065:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "919:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "930:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "942:6:7",
                "type": ""
              }
            ],
            "src": "883:262:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1225:204:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1271:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1280:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1283:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1273:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1273:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1273:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1246:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1242:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1242:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1267:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1238:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1235:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1297:125:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1312:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1326:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1316:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1341:71:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1384:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1395:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1380:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1380:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1404:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1351:28:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1351:61:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1341:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1195:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1206:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1218:6:7",
                "type": ""
              }
            ],
            "src": "1151:278:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1501:196:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1547:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1556:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1559:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1549:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1549:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1549:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1522:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1531:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1518:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1518:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1543:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1514:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1514:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1511:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1573:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1588:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1602:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1592:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1617:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1652:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1663:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1648:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1648:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1672:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1627:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1627:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1617:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1471:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1482:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1494:6:7",
                "type": ""
              }
            ],
            "src": "1435:262:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:207:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1826:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1835:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1838:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1828:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1828:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1828:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1801:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1810:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1793:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1790:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1852:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1867:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1871:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1896:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1942:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1953:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1938:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1938:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1962:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1906:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1906:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1896:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1750:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1761:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1773:6:7",
                "type": ""
              }
            ],
            "src": "1703:284:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2135:762:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2182:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2191:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2194:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2184:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2184:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2184:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2156:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2165:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2152:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2152:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2177:3:7",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2148:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2148:33:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2145:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2208:127:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2223:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2237:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2227:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2252:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2297:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2308:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2293:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2293:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2317:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2262:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2262:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2252:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2345:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2360:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2374:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2364:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2390:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2435:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2446:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2431:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2431:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2455:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2400:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2400:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2390:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2483:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2498:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2512:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2502:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2528:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2574:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2585:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2570:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2570:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2594:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2538:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2538:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2528:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2622:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2637:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2651:2:7",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2641:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2667:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2713:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2724:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2709:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2709:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2733:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2677:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2677:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2667:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2761:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2776:17:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2790:3:7",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2780:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2807:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2852:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2863:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2848:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2848:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2872:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2817:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2817:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "2807:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2073:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2084:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2096:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2104:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2112:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2120:6:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2128:6:7",
                "type": ""
              }
            ],
            "src": "1993:904:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2968:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2985:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3008:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2990:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2990:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2978:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2978:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2978:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2956:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2963:3:7",
                "type": ""
              }
            ],
            "src": "2903:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3086:50:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3103:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3123:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3108:14:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3108:21:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3096:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3096:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3096:34:7"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3074:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3081:3:7",
                "type": ""
              }
            ],
            "src": "3027:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3217:76:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3234:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3280:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Currency_$288_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3239:40:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3239:47:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3227:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3227:60:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3227:60:7"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Currency_$288_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3205:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3212:3:7",
                "type": ""
              }
            ],
            "src": "3142:151:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3445:170:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3455:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3521:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3526:2:7",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3462:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3455:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3550:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3555:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3546:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3546:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3559:20:7",
                        "type": "",
                        "value": "Failed to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3539:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3539:41:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3539:41:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3590:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3601:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3606:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3597:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3597:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3590:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3433:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3441:3:7",
                "type": ""
              }
            ],
            "src": "3299:316:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3767:224:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3777:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3843:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3848:2:7",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3784:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3777:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3872:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3877:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3868:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3868:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3881:34:7",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3861:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3861:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3861:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3937:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3942:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3933:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3933:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3947:8:7",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3926:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3926:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3926:30:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3966:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3977:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3982:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3973:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3973:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3966:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3755:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3763:3:7",
                "type": ""
              }
            ],
            "src": "3621:370:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4143:171:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4153:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4219:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4224:2:7",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4160:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4160:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4153:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4248:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4253:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4244:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4244:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4257:21:7",
                        "type": "",
                        "value": "Already subscribed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4237:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4237:42:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4237:42:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4289:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4300:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4305:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4296:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4296:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4289:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4131:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4139:3:7",
                "type": ""
              }
            ],
            "src": "3997:317:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4466:222:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4476:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4542:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4547:2:7",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4483:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4483:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4476:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4571:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4576:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4567:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4567:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4580:34:7",
                        "type": "",
                        "value": "Please, pay the exact amount in "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4560:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4560:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4636:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4641:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4632:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4632:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4646:6:7",
                        "type": "",
                        "value": "ETH."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4625:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4625:28:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4625:28:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4663:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4674:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4679:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4670:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4670:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4663:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4454:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4462:3:7",
                "type": ""
              }
            ],
            "src": "4320:368:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4840:178:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4850:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4916:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4921:2:7",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4857:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4857:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4850:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4945:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4950:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4941:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4941:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4954:28:7",
                        "type": "",
                        "value": "You don't have enough DAI."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4934:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4934:49:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4934:49:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4993:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5004:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5009:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5000:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5000:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4993:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4828:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4836:3:7",
                "type": ""
              }
            ],
            "src": "4694:324:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5170:168:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5180:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5246:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5251:2:7",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5187:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5187:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5180:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5275:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5280:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5271:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5271:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5284:18:7",
                        "type": "",
                        "value": "Failed to Refund"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5264:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5264:39:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5264:39:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5313:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5324:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5329:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5320:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5313:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5158:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5166:3:7",
                "type": ""
              }
            ],
            "src": "5024:314:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5490:184:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5500:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5566:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5571:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5507:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5500:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5595:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5600:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5591:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5591:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5604:34:7",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5584:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5584:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5584:55:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5649:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5660:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5665:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5656:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5656:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5649:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5478:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5486:3:7",
                "type": ""
              }
            ],
            "src": "5344:330:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5826:171:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5836:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5902:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5907:2:7",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5843:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5843:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5836:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5931:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5936:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5927:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5927:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5940:21:7",
                        "type": "",
                        "value": "Grace Period Ended."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5920:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5920:42:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5920:42:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5972:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5983:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5988:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5979:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5979:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5972:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5814:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5822:3:7",
                "type": ""
              }
            ],
            "src": "5680:317:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6149:167:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6159:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6225:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6230:2:7",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6166:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6166:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6159:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6254:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6259:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6250:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6250:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6263:17:7",
                        "type": "",
                        "value": "Not subscribed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6243:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6243:38:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6243:38:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6291:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6302:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6307:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6298:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6298:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6291:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6137:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6145:3:7",
                "type": ""
              }
            ],
            "src": "6003:313:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6485:134:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6495:90:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6578:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6583:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6502:75:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6502:83:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6495:3:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6595:18:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6606:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6611:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6602:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6602:11:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6595:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6473:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6481:3:7",
                "type": ""
              }
            ],
            "src": "6322:297:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6690:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6707:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6730:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6712:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6712:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6700:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6700:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6678:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6685:3:7",
                "type": ""
              }
            ],
            "src": "6625:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6937:191:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6948:154:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7098:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6955:141:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6955:147:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6948:3:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7112:10:7",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7119:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7112:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6924:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6933:3:7",
                "type": ""
              }
            ],
            "src": "6749:379:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7232:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7242:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7254:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7265:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7250:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7250:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7242:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7322:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7335:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7346:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7331:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7331:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7278:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7278:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7278:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7204:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7216:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7227:4:7",
                "type": ""
              }
            ],
            "src": "7134:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7516:288:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7526:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7538:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7549:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7534:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7534:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7526:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7606:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7619:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7630:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7615:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7615:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7562:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7562:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7562:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7687:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7700:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7711:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7696:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7696:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7643:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7643:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7643:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7769:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7782:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7793:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7778:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7778:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7725:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7725:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7725:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7472:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7484:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7492:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7500:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7511:4:7",
                "type": ""
              }
            ],
            "src": "7362:442:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7936:206:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7946:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7958:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7969:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7954:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7954:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7946:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8026:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8039:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8050:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8035:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8035:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7982:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7982:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7982:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8107:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8120:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8131:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8116:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8116:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8063:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8063:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8063:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7900:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7912:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7920:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7931:4:7",
                "type": ""
              }
            ],
            "src": "7810:332:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8240:118:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8250:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8262:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8273:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8258:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8258:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8250:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8324:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8337:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8348:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8333:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8333:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8286:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8286:65:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8286:65:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8212:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8224:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8235:4:7",
                "type": ""
              }
            ],
            "src": "8148:210:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8535:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8545:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8557:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8568:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8553:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8545:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8592:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8603:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8588:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8588:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8611:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8617:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8607:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8607:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8581:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8581:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8581:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8637:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8771:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8645:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8645:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8637:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8515:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8530:4:7",
                "type": ""
              }
            ],
            "src": "8364:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8960:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8970:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8982:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8993:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8978:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8978:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8970:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9017:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9028:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9013:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9013:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9036:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9042:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9032:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9032:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9006:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9006:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9006:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9062:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9196:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9070:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9070:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9062:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8940:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8955:4:7",
                "type": ""
              }
            ],
            "src": "8789:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9385:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9395:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9407:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9418:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9403:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9403:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9395:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9442:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9453:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9438:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9438:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9461:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9467:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9457:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9457:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9431:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9431:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9431:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9487:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9621:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9495:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9495:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9487:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9365:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9380:4:7",
                "type": ""
              }
            ],
            "src": "9214:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9810:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9820:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9832:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9843:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9828:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9828:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9820:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9867:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9878:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9863:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9863:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9886:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9892:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9882:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9882:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9856:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9856:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9856:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9912:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10046:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9920:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9920:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9912:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9790:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9805:4:7",
                "type": ""
              }
            ],
            "src": "9639:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10235:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10245:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10257:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10268:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10253:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10253:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10245:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10292:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10303:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10288:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10288:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10311:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10317:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10307:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10307:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10281:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10281:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10281:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10337:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10471:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10345:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10345:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10337:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10215:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10230:4:7",
                "type": ""
              }
            ],
            "src": "10064:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10660:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10670:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10682:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10693:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10678:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10678:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10670:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10717:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10728:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10713:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10713:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10736:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10742:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10732:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10732:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10706:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10706:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10706:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10762:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10896:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10770:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10770:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10762:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10640:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10655:4:7",
                "type": ""
              }
            ],
            "src": "10489:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11085:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11095:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11107:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11118:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11103:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11103:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11095:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11142:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11153:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11138:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11138:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11161:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11167:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11157:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11157:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11131:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11131:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11131:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11187:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11321:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11195:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11195:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11187:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11065:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11080:4:7",
                "type": ""
              }
            ],
            "src": "10914:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11510:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11520:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11532:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11543:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11528:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11528:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11520:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11567:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11578:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11563:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11563:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11586:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11592:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11582:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11582:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11556:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11556:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11556:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11612:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11746:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11620:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11620:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11612:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11490:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11505:4:7",
                "type": ""
              }
            ],
            "src": "11339:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11935:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11945:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11957:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11968:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11953:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11953:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11945:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11992:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12003:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11988:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11988:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12011:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12017:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12007:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12007:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11981:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11981:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11981:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12037:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12171:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12045:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12045:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12037:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11915:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11930:4:7",
                "type": ""
              }
            ],
            "src": "11764:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12287:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12297:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12309:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12320:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12305:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12305:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12297:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12377:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12390:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12401:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12386:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12386:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12333:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12333:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12333:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12259:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12271:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12282:4:7",
                "type": ""
              }
            ],
            "src": "12189:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12581:298:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12591:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12603:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12614:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12599:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12599:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12591:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12671:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12684:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12695:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12680:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12680:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12627:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12627:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12627:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12762:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12775:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12786:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12771:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12771:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Currency_$288_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12708:53:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12708:82:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12708:82:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12844:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12857:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12868:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12853:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12853:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12800:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12800:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12800:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_enum$_Currency_$288_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12537:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12549:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12557:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12565:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12576:4:7",
                "type": ""
              }
            ],
            "src": "12417:462:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12998:34:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13008:18:7",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "13023:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "13008:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12970:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12975:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "12986:11:7",
                "type": ""
              }
            ],
            "src": "12885:147:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13134:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13151:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13156:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13144:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13144:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13144:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13172:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13191:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13196:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13187:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13187:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "13172:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13106:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13111:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "13122:11:7",
                "type": ""
              }
            ],
            "src": "13038:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13257:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13267:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13290:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13272:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13272:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13267:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13301:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13324:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13306:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13306:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13301:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13464:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13466:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13466:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13466:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13385:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13392:66:7",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13460:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13388:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13388:74:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13382:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13382:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13379:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13496:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13507:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13510:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13503:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13503:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13496:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13244:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13247:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13253:3:7",
                "type": ""
              }
            ],
            "src": "13213:305:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13565:344:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13575:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13597:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "13580:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13580:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13575:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13608:24:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13630:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "13613:16:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13613:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13608:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13654:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "13656:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13656:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13656:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13651:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13644:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13644:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13641:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13856:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13858:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13858:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13858:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "13745:1:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13748:66:7",
                            "type": "",
                            "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13742:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13742:73:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13832:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13839:1:7",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13842:1:7",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "13835:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13835:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13829:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13829:16:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13725:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13725:130:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13722:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13888:15:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13898:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13901:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sdiv",
                      "nodeType": "YulIdentifier",
                      "src": "13893:4:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13893:10:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13888:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13554:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13557:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13563:1:7",
                "type": ""
              }
            ],
            "src": "13524:385:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13957:143:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13967:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13990:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13972:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13972:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13967:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14001:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14024:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14006:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14006:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14001:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14048:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "14050:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14050:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14050:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14045:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14038:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14038:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14035:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14080:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14089:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14092:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14085:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14085:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14080:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13946:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13949:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13955:1:7",
                "type": ""
              }
            ],
            "src": "13915:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14154:300:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14164:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14187:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14169:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14169:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14164:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14198:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14221:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14203:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14203:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14198:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14396:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14398:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14398:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14398:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14308:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14301:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14301:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14294:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14294:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14316:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14323:66:7",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14391:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14319:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14319:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14313:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14313:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14290:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14290:105:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14287:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14428:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14443:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14446:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14439:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14439:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14428:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14137:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14140:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14146:7:7",
                "type": ""
              }
            ],
            "src": "14106:348:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14505:146:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14515:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14538:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14520:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14520:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14515:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14549:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14572:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14554:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14554:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14549:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14596:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14598:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14598:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14598:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14590:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14593:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14587:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14587:8:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14584:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14628:17:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14640:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14643:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14636:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14636:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14628:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14491:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14494:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14500:4:7",
                "type": ""
              }
            ],
            "src": "14460:191:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14702:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14712:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14741:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "14723:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14723:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14712:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14684:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14694:7:7",
                "type": ""
              }
            ],
            "src": "14657:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14801:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14811:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14836:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14829:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14829:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14822:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14822:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14811:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14783:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14793:7:7",
                "type": ""
              }
            ],
            "src": "14759:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14912:78:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14922:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14933:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14922:7:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14978:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Currency_$288",
                      "nodeType": "YulIdentifier",
                      "src": "14939:38:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14939:45:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14939:45:7"
                }
              ]
            },
            "name": "cleanup_t_enum$_Currency_$288",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14894:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14904:7:7",
                "type": ""
              }
            ],
            "src": "14855:135:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15040:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15050:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "15061:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15050:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15022:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15032:7:7",
                "type": ""
              }
            ],
            "src": "14996:76:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15123:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15133:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15148:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15155:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15144:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15144:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15133:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15105:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15115:7:7",
                "type": ""
              }
            ],
            "src": "15078:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15255:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15265:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "15276:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15265:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15237:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15247:7:7",
                "type": ""
              }
            ],
            "src": "15210:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15337:61:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15347:45:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15362:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15369:22:7",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15358:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15358:34:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15347:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15319:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15329:7:7",
                "type": ""
              }
            ],
            "src": "15293:105:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15474:65:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15484:49:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15527:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Currency_$288",
                      "nodeType": "YulIdentifier",
                      "src": "15497:29:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15497:36:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15484:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Currency_$288_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15454:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15464:9:7",
                "type": ""
              }
            ],
            "src": "15404:135:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15573:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15590:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15593:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15583:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15583:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15583:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15687:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15690:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15680:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15680:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15680:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15711:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15714:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15704:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15704:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15704:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "15545:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15759:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15776:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15779:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15769:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15769:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15769:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15873:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15876:4:7",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15866:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15866:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15866:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15897:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15900:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15890:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15890:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15890:15:7"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "15731:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15945:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15962:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15965:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15955:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15955:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15955:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16059:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16062:4:7",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16052:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16052:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16052:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16083:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16086:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16076:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16076:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16076:15:7"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "15917:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16158:62:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16192:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "16194:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16194:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16194:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16181:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16188:1:7",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "16178:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16178:12:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16171:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16171:20:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16168:2:7"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Currency_$288",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16151:5:7",
                "type": ""
              }
            ],
            "src": "16103:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16269:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16326:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16335:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16338:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16328:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16328:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16328:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16292:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16317:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "16299:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16299:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16289:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16289:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16282:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16282:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16279:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16262:5:7",
                "type": ""
              }
            ],
            "src": "16226:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16394:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16448:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16457:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16460:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16450:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16450:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16450:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16417:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16439:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "16424:14:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16424:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16414:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16414:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16407:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16407:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16404:2:7"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16387:5:7",
                "type": ""
              }
            ],
            "src": "16354:116:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16518:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16574:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16583:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16586:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16576:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16576:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16576:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16541:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16565:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "16548:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16548:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16538:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16538:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16531:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16531:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16528:2:7"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16511:5:7",
                "type": ""
              }
            ],
            "src": "16476:120:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16645:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16702:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16711:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16714:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16704:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16704:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16704:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16668:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16693:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "16675:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16675:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16665:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16665:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16658:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16658:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16655:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16638:5:7",
                "type": ""
              }
            ],
            "src": "16602:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16772:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16828:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16837:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16840:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16830:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16830:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16830:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16795:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16819:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "16802:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16802:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16792:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16792:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16785:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16785:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "16782:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16765:5:7",
                "type": ""
              }
            ],
            "src": "16730:120:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Currency_$288_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Currency_$288_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Failed to withdraw\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"Already subscribed.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"Please, pay the exact amount in \")\n\n        mstore(add(pos, 32), \"ETH.\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n\n        mstore(add(pos, 0), \"You don't have enough DAI.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n\n        mstore(add(pos, 0), \"Failed to Refund\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"Grace Period Ended.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n\n        mstore(add(pos, 0), \"Not subscribed.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Currency_$288_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Currency_$288_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Currency_$288(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Currency_$288(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_enum$_Currency_$288_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Currency_$288(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Currency_$288(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "465:5961:4:-:0;;;1023:8;999:32;;1065:7;1034:38;;2022:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:1;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;2125:10:4;2112:3;;:24;;;;;;;;;;;;;;;;;;2181:12;2141:15;;:53;;;;;;;;;;;;;;;;;;2219:21;2199:17;:41;;;;2022:223;;;465:5961;;587:96:3;640:7;666:10;659:17;;587:96;:::o;2041:169:1:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:143:7:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:596::-;;;;458:2;446:9;437:7;433:23;429:32;426:2;;;474:1;471;464:12;426:2;517:1;542:64;598:7;589:6;578:9;574:22;542:64;:::i;:::-;532:74;;488:128;655:2;681:64;737:7;728:6;717:9;713:22;681:64;:::i;:::-;671:74;;626:129;794:2;820:64;876:7;867:6;856:9;852:22;820:64;:::i;:::-;810:74;;765:129;416:485;;;;;:::o;907:96::-;;973:24;991:5;973:24;:::i;:::-;962:35;;952:51;;;:::o;1009:126::-;;1086:42;1079:5;1075:54;1064:65;;1054:81;;;:::o;1141:77::-;;1207:5;1196:16;;1186:32;;;:::o;1224:122::-;1297:24;1315:5;1297:24;:::i;:::-;1290:5;1287:35;1277:2;;1336:1;1333;1326:12;1277:2;1267:79;:::o;1352:122::-;1425:24;1443:5;1425:24;:::i;:::-;1418:5;1415:35;1405:2;;1464:1;1461;1454:12;1405:2;1395:79;:::o;465:5961:4:-;;;;;;;",
  "deployedSourceMap": "465:5961:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6160:264;;;;;;;;;;;;;:::i;:::-;;3138:166;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:1;;;;;;;;;;;;;:::i;:::-;;5913:120:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;973:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4871:232:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4065:450;;;;;;;;;;;;;:::i;:::-;;4636:130;;;;;;;;;;;;;:::i;:::-;;5290:504;;;;;;;;;;;;;:::i;:::-;;3492:361;;;:::i;:::-;;1708:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1846:189:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6160:264:4;1196:12:1;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6214:9:4::1;6229:7;:5;:7::i;:::-;:12;;6249:21;6229:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6213:62;;;6289:4;6281:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;6357:1;6326:3;;;;;;;;;;;:13;;;6348:4;6326:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;6322:97;;;6365:3;;;;;;;;;;;:12;;;6378:10;6390:3;;;;;;;;;;;:13;;;6412:4;6390:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6365:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6322:97;1255:1:1;6160:264:4:o:0;3138:166::-;3195:7;3209:15;3227:16;:14;:16::i;:::-;3209:34;;3290:8;3275:4;3255:17;;:24;;;;:::i;:::-;:44;;;;:::i;:::-;3248:51;;;3138:166;:::o;1605:92:1:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;5913:120:4:-;1196:12:1;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6010:18:4::1;5990:17;:38;;;;5913:120:::0;:::o;973:85:1:-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;4871:232:4:-;4942:4;4997:1;4957:13;:25;4971:10;4957:25;;;;;;;;;;;;;;;:36;;;:41;:99;;;;5041:15;5002:13;:25;5016:10;5002:25;;;;;;;;;;;;;;;:36;;;:54;4957:99;4953:146;;;5069:5;5062:12;;;;4953:146;5095:4;5088:11;;4871:232;;;;:::o;856:32::-;;;;:::o;4065:450::-;2323:1;2283:13;:25;2297:10;2283:25;;;;;;;;;;;;;;;:36;;;:41;:99;;;;2367:15;2328:13;:25;2342:10;2328:25;;;;;;;;;;;;;;;:36;;;:54;2283:99;2275:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;4180:4:::1;4160:17;;:24;;;;:::i;:::-;4131:3;;;;;;;;;;;:13;;;4145:10;4131:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;4123:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;4221:3;;;;;;;;;;;:16;;;4238:10;4258:4;4285;4265:17;;:24;;;;:::i;:::-;4221:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4352:4;;4334:15;:22;;;;:::i;:::-;4295:13;:25;4309:10;4295:25;;;;;;;;;;;;;;;:36;;:61;;;;4398:12;4361:13;:25;4375:10;4361:25;;;;;;;;;;;;;;;:34;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4471:4;4451:17;;:24;;;;:::i;:::-;4415:13;:25;4429:10;4415:25;;;;;;;;;;;;;;;:33;;:60;;;;4486:22;4497:10;4486:22;;;;;;:::i;:::-;;;;;;;;4065:450::o:0;4636:130::-;:::o;5290:504::-;2490:1;2450:13;:25;2464:10;2450:25;;;;;;;;;;;;;;;:36;;;:41;;:99;;;;2534:15;2495:13;:25;2509:10;2495:25;;;;;;;;;;;;;;;:36;;;:54;2450:99;2442:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;2675:15:::1;2661:11;;2654:4;;2615:13;:25;2629:10;2615:25;;;;;;;;;;;;;;;:36;;;:43;;;;:::i;:::-;:57;;;;:::i;:::-;:75;2607:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;5362:20:::2;5385:13;:25;5399:10;5385:25;;;;;;;;;;;;;;;:33;;;5362:56;;5460:1;5424:13;:25;5438:10;5424:25;;;;;;;;;;;;;;;:33;;:37;;;;5505:1;5466:13;:25;5480:10;5466:25;;;;;;;;;;;;;;;:36;;:40;;;;5554:12;5516:50;;;;;;;;;;;;;;;;:13;:25;5530:10;5516:25;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;5512:278;;;5576:9;5591:10;:15;;5614:12;5591:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5575:56;;;5646:4;5638:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;5512:278;;;;5725:12;5687:50:::0;::::2;;;;;;;;;;;;;;;:13;:25;5701:10;5687:25;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;5683:107;;;5746:3;;;;;;;;;;;:12;;;5759:10;5771:12;5746:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5683:107;5512:278;2718:1;5290:504::o:0;3492:361::-;2323:1;2283:13;:25;2297:10;2283:25;;;;;;;;;;;;;;;:36;;;:41;:99;;;;2367:15;2328:13;:25;2342:10;2328:25;;;;;;;;;;;;;;;:36;;;:54;2283:99;2275:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;3582:19:::1;:17;:19::i;:::-;3569:9;:32;3561:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3705:4;;3687:15;:22;;;;:::i;:::-;3648:13;:25;3662:10;3648:25;;;;;;;;;;;;;;;:36;;:61;;;;3751:12;3714:13;:25;3728:10;3714:25;;;;;;;;;;;;;;;:34;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3804:9;3768:13;:25;3782:10;3768:25;;;;;;;;;;;;;;;:33;;:45;;;;3824:22;3835:10;3824:22;;;;;;:::i;:::-;;;;;;;;3492:361::o:0;1708:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1846:189:1:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:3:-;640:7;666:10;659:17;;587:96;:::o;2845:168:4:-;2903:6;2925:13;2951:15;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2916:68;;;;;;3005:3;2996:6;:12;;;;:::i;:::-;2989:19;;;2845:168;:::o;2041:169:1:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:141::-;;382:6;376:13;367:22;;398:32;424:5;398:32;:::i;:::-;357:79;;;;:::o;442:139::-;;526:6;513:20;504:29;;542:33;569:5;542:33;:::i;:::-;494:87;;;;:::o;587:143::-;;675:6;669:13;660:22;;691:33;718:5;691:33;:::i;:::-;650:80;;;;:::o;736:141::-;;823:6;817:13;808:22;;839:32;865:5;839:32;:::i;:::-;798:79;;;;:::o;883:262::-;;991:2;979:9;970:7;966:23;962:32;959:2;;;1007:1;1004;997:12;959:2;1050:1;1075:53;1120:7;1111:6;1100:9;1096:22;1075:53;:::i;:::-;1065:63;;1021:117;949:196;;;;:::o;1151:278::-;;1267:2;1255:9;1246:7;1242:23;1238:32;1235:2;;;1283:1;1280;1273:12;1235:2;1326:1;1351:61;1404:7;1395:6;1384:9;1380:22;1351:61;:::i;:::-;1341:71;;1297:125;1225:204;;;;:::o;1435:262::-;;1543:2;1531:9;1522:7;1518:23;1514:32;1511:2;;;1559:1;1556;1549:12;1511:2;1602:1;1627:53;1672:7;1663:6;1652:9;1648:22;1627:53;:::i;:::-;1617:63;;1573:117;1501:196;;;;:::o;1703:284::-;;1822:2;1810:9;1801:7;1797:23;1793:32;1790:2;;;1838:1;1835;1828:12;1790:2;1881:1;1906:64;1962:7;1953:6;1942:9;1938:22;1906:64;:::i;:::-;1896:74;;1852:128;1780:207;;;;:::o;1993:904::-;;;;;;2177:3;2165:9;2156:7;2152:23;2148:33;2145:2;;;2194:1;2191;2184:12;2145:2;2237:1;2262:63;2317:7;2308:6;2297:9;2293:22;2262:63;:::i;:::-;2252:73;;2208:127;2374:2;2400:63;2455:7;2446:6;2435:9;2431:22;2400:63;:::i;:::-;2390:73;;2345:128;2512:2;2538:64;2594:7;2585:6;2574:9;2570:22;2538:64;:::i;:::-;2528:74;;2483:129;2651:2;2677:64;2733:7;2724:6;2713:9;2709:22;2677:64;:::i;:::-;2667:74;;2622:129;2790:3;2817:63;2872:7;2863:6;2852:9;2848:22;2817:63;:::i;:::-;2807:73;;2761:129;2135:762;;;;;;;;:::o;2903:118::-;2990:24;3008:5;2990:24;:::i;:::-;2985:3;2978:37;2968:53;;:::o;3027:109::-;3108:21;3123:5;3108:21;:::i;:::-;3103:3;3096:34;3086:50;;:::o;3142:151::-;3239:47;3280:5;3239:47;:::i;:::-;3234:3;3227:60;3217:76;;:::o;3299:316::-;;3462:67;3526:2;3521:3;3462:67;:::i;:::-;3455:74;;3559:20;3555:1;3550:3;3546:11;3539:41;3606:2;3601:3;3597:12;3590:19;;3445:170;;;:::o;3621:370::-;;3784:67;3848:2;3843:3;3784:67;:::i;:::-;3777:74;;3881:34;3877:1;3872:3;3868:11;3861:55;3947:8;3942:2;3937:3;3933:12;3926:30;3982:2;3977:3;3973:12;3966:19;;3767:224;;;:::o;3997:317::-;;4160:67;4224:2;4219:3;4160:67;:::i;:::-;4153:74;;4257:21;4253:1;4248:3;4244:11;4237:42;4305:2;4300:3;4296:12;4289:19;;4143:171;;;:::o;4320:368::-;;4483:67;4547:2;4542:3;4483:67;:::i;:::-;4476:74;;4580:34;4576:1;4571:3;4567:11;4560:55;4646:6;4641:2;4636:3;4632:12;4625:28;4679:2;4674:3;4670:12;4663:19;;4466:222;;;:::o;4694:324::-;;4857:67;4921:2;4916:3;4857:67;:::i;:::-;4850:74;;4954:28;4950:1;4945:3;4941:11;4934:49;5009:2;5004:3;5000:12;4993:19;;4840:178;;;:::o;5024:314::-;;5187:67;5251:2;5246:3;5187:67;:::i;:::-;5180:74;;5284:18;5280:1;5275:3;5271:11;5264:39;5329:2;5324:3;5320:12;5313:19;;5170:168;;;:::o;5344:330::-;;5507:67;5571:2;5566:3;5507:67;:::i;:::-;5500:74;;5604:34;5600:1;5595:3;5591:11;5584:55;5665:2;5660:3;5656:12;5649:19;;5490:184;;;:::o;5680:317::-;;5843:67;5907:2;5902:3;5843:67;:::i;:::-;5836:74;;5940:21;5936:1;5931:3;5927:11;5920:42;5988:2;5983:3;5979:12;5972:19;;5826:171;;;:::o;6003:313::-;;6166:67;6230:2;6225:3;6166:67;:::i;:::-;6159:74;;6263:17;6259:1;6254:3;6250:11;6243:38;6307:2;6302:3;6298:12;6291:19;;6149:167;;;:::o;6322:297::-;;6502:83;6583:1;6578:3;6502:83;:::i;:::-;6495:90;;6611:1;6606:3;6602:11;6595:18;;6485:134;;;:::o;6625:118::-;6712:24;6730:5;6712:24;:::i;:::-;6707:3;6700:37;6690:53;;:::o;6749:379::-;;6955:147;7098:3;6955:147;:::i;:::-;6948:154;;7119:3;7112:10;;6937:191;;;:::o;7134:222::-;;7265:2;7254:9;7250:18;7242:26;;7278:71;7346:1;7335:9;7331:17;7322:6;7278:71;:::i;:::-;7232:124;;;;:::o;7362:442::-;;7549:2;7538:9;7534:18;7526:26;;7562:71;7630:1;7619:9;7615:17;7606:6;7562:71;:::i;:::-;7643:72;7711:2;7700:9;7696:18;7687:6;7643:72;:::i;:::-;7725;7793:2;7782:9;7778:18;7769:6;7725:72;:::i;:::-;7516:288;;;;;;:::o;7810:332::-;;7969:2;7958:9;7954:18;7946:26;;7982:71;8050:1;8039:9;8035:17;8026:6;7982:71;:::i;:::-;8063:72;8131:2;8120:9;8116:18;8107:6;8063:72;:::i;:::-;7936:206;;;;;:::o;8148:210::-;;8273:2;8262:9;8258:18;8250:26;;8286:65;8348:1;8337:9;8333:17;8324:6;8286:65;:::i;:::-;8240:118;;;;:::o;8364:419::-;;8568:2;8557:9;8553:18;8545:26;;8617:9;8611:4;8607:20;8603:1;8592:9;8588:17;8581:47;8645:131;8771:4;8645:131;:::i;:::-;8637:139;;8535:248;;;:::o;8789:419::-;;8993:2;8982:9;8978:18;8970:26;;9042:9;9036:4;9032:20;9028:1;9017:9;9013:17;9006:47;9070:131;9196:4;9070:131;:::i;:::-;9062:139;;8960:248;;;:::o;9214:419::-;;9418:2;9407:9;9403:18;9395:26;;9467:9;9461:4;9457:20;9453:1;9442:9;9438:17;9431:47;9495:131;9621:4;9495:131;:::i;:::-;9487:139;;9385:248;;;:::o;9639:419::-;;9843:2;9832:9;9828:18;9820:26;;9892:9;9886:4;9882:20;9878:1;9867:9;9863:17;9856:47;9920:131;10046:4;9920:131;:::i;:::-;9912:139;;9810:248;;;:::o;10064:419::-;;10268:2;10257:9;10253:18;10245:26;;10317:9;10311:4;10307:20;10303:1;10292:9;10288:17;10281:47;10345:131;10471:4;10345:131;:::i;:::-;10337:139;;10235:248;;;:::o;10489:419::-;;10693:2;10682:9;10678:18;10670:26;;10742:9;10736:4;10732:20;10728:1;10717:9;10713:17;10706:47;10770:131;10896:4;10770:131;:::i;:::-;10762:139;;10660:248;;;:::o;10914:419::-;;11118:2;11107:9;11103:18;11095:26;;11167:9;11161:4;11157:20;11153:1;11142:9;11138:17;11131:47;11195:131;11321:4;11195:131;:::i;:::-;11187:139;;11085:248;;;:::o;11339:419::-;;11543:2;11532:9;11528:18;11520:26;;11592:9;11586:4;11582:20;11578:1;11567:9;11563:17;11556:47;11620:131;11746:4;11620:131;:::i;:::-;11612:139;;11510:248;;;:::o;11764:419::-;;11968:2;11957:9;11953:18;11945:26;;12017:9;12011:4;12007:20;12003:1;11992:9;11988:17;11981:47;12045:131;12171:4;12045:131;:::i;:::-;12037:139;;11935:248;;;:::o;12189:222::-;;12320:2;12309:9;12305:18;12297:26;;12333:71;12401:1;12390:9;12386:17;12377:6;12333:71;:::i;:::-;12287:124;;;;:::o;12417:462::-;;12614:2;12603:9;12599:18;12591:26;;12627:71;12695:1;12684:9;12680:17;12671:6;12627:71;:::i;:::-;12708:82;12786:2;12775:9;12771:18;12762:6;12708:82;:::i;:::-;12800:72;12868:2;12857:9;12853:18;12844:6;12800:72;:::i;:::-;12581:298;;;;;;:::o;12885:147::-;;13023:3;13008:18;;12998:34;;;;:::o;13038:169::-;;13156:6;13151:3;13144:19;13196:4;13191:3;13187:14;13172:29;;13134:73;;;;:::o;13213:305::-;;13272:20;13290:1;13272:20;:::i;:::-;13267:25;;13306:20;13324:1;13306:20;:::i;:::-;13301:25;;13460:1;13392:66;13388:74;13385:1;13382:81;13379:2;;;13466:18;;:::i;:::-;13379:2;13510:1;13507;13503:9;13496:16;;13257:261;;;;:::o;13524:385::-;;13580:19;13597:1;13580:19;:::i;:::-;13575:24;;13613:19;13630:1;13613:19;:::i;:::-;13608:24;;13651:1;13641:2;;13656:18;;:::i;:::-;13641:2;13842:1;13839;13835:9;13832:1;13829:16;13748:66;13745:1;13742:73;13725:130;13722:2;;;13858:18;;:::i;:::-;13722:2;13901:1;13898;13893:10;13888:15;;13565:344;;;;:::o;13915:185::-;;13972:20;13990:1;13972:20;:::i;:::-;13967:25;;14006:20;14024:1;14006:20;:::i;:::-;14001:25;;14045:1;14035:2;;14050:18;;:::i;:::-;14035:2;14092:1;14089;14085:9;14080:14;;13957:143;;;;:::o;14106:348::-;;14169:20;14187:1;14169:20;:::i;:::-;14164:25;;14203:20;14221:1;14203:20;:::i;:::-;14198:25;;14391:1;14323:66;14319:74;14316:1;14313:81;14308:1;14301:9;14294:17;14290:105;14287:2;;;14398:18;;:::i;:::-;14287:2;14446:1;14443;14439:9;14428:20;;14154:300;;;;:::o;14460:191::-;;14520:20;14538:1;14520:20;:::i;:::-;14515:25;;14554:20;14572:1;14554:20;:::i;:::-;14549:25;;14593:1;14590;14587:8;14584:2;;;14598:18;;:::i;:::-;14584:2;14643:1;14640;14636:9;14628:17;;14505:146;;;;:::o;14657:96::-;;14723:24;14741:5;14723:24;:::i;:::-;14712:35;;14702:51;;;:::o;14759:90::-;;14836:5;14829:13;14822:21;14811:32;;14801:48;;;:::o;14855:135::-;;14933:5;14922:16;;14939:45;14978:5;14939:45;:::i;:::-;14912:78;;;:::o;14996:76::-;;15061:5;15050:16;;15040:32;;;:::o;15078:126::-;;15155:42;15148:5;15144:54;15133:65;;15123:81;;;:::o;15210:77::-;;15276:5;15265:16;;15255:32;;;:::o;15293:105::-;;15369:22;15362:5;15358:34;15347:45;;15337:61;;;:::o;15404:135::-;;15497:36;15527:5;15497:36;:::i;:::-;15484:49;;15474:65;;;:::o;15545:180::-;15593:77;15590:1;15583:88;15690:4;15687:1;15680:15;15714:4;15711:1;15704:15;15731:180;15779:77;15776:1;15769:88;15876:4;15873:1;15866:15;15900:4;15897:1;15890:15;15917:180;15965:77;15962:1;15955:88;16062:4;16059:1;16052:15;16086:4;16083:1;16076:15;16103:117;16188:1;16181:5;16178:12;16168:2;;16194:18;;:::i;:::-;16168:2;16158:62;:::o;16226:122::-;16299:24;16317:5;16299:24;:::i;:::-;16292:5;16289:35;16279:2;;16338:1;16335;16328:12;16279:2;16269:79;:::o;16354:116::-;16424:21;16439:5;16424:21;:::i;:::-;16417:5;16414:32;16404:2;;16460:1;16457;16450:12;16404:2;16394:76;:::o;16476:120::-;16548:23;16565:5;16548:23;:::i;:::-;16541:5;16538:34;16528:2;;16586:1;16583;16576:12;16528:2;16518:78;:::o;16602:122::-;16675:24;16693:5;16675:24;:::i;:::-;16668:5;16665:35;16655:2;;16714:1;16711;16704:12;16655:2;16645:79;:::o;16730:120::-;16802:23;16819:5;16802:23;:::i;:::-;16795:5;16792:34;16782:2;;16840:1;16837;16830:12;16782:2;16772:78;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n/// @title Crypto Briefing User Authentication\n/// @author Anton Tarasov\n/// @notice Enables users to get access to SIMETRI via ETH or a stablecoin\n/// @dev Lifetime subsription via an NFT minter will be implemented\ncontract CBAuth is Ownable {\n\n\t/// @notice Emitted when a person is subscribed for the service\n\t/// @param subscriber Subscriber ETH address\n\tevent Subscribed(address subscriber);\n\n\t/// @notice Emitted when a person gets a refund\n\t/// @param subscriber Subscriber ETH address\n\tevent Refunded(address subscriber);\n\n\t/// @notice Subscription price is in USD\n\t/// @dev Assigned in constructor\n\tuint256 public subscriptionPrice;\n\n\t/// @dev Lengths of subscription and grace period in seconds for tracking expiration & refund eligibility\n\tuint256 internal year = 31536000;\n\tuint256 internal gracePeriod = 2592000;\n\n\t/// @dev IERC20 interface for interacting with DAI\n\tIERC20 internal dai;\n\n\t/// @dev Chainlink interface for getting the price of ETH in USD\n\tAggregatorV3Interface internal ETHUSDPriceFeed;\n\n\t/// @dev Helps determining in which currency the subscriber paid, important for refunds\n\tenum Currency { ETH, DAI }\n\tCurrency constant defaultChoice = Currency.ETH;\n\n\t/// @dev Data used for checking whether a subscription is active and is refund possible\n\tstruct Subscription {\n\t\tuint256 expiration;\n\t\tCurrency currency;\n\t\tuint256 balance;\n\t}\n\n\t/// @notice Information about each ETH address subscription, all zeroes means \"not subscribed\"\n\tmapping(address=>Subscription) public subscriptions;\n\n\t/// @param daiAddress Address of the DAI contract\n\t/// @param ethUsdOracle Address of Chainlink data feed\n\t/// @param initSubscriptionPrice Sets initial price of a subscription in USD w/o decimals\n\t/// @dev Had to use USDT contract on Rinkeby instead of DAI\n\tconstructor(address daiAddress, address ethUsdOracle, uint256 initSubscriptionPrice) {\n\t\t\tdai = IERC20(daiAddress);\n\t\t\tETHUSDPriceFeed = AggregatorV3Interface(ethUsdOracle);\n\t\t\tsubscriptionPrice = initSubscriptionPrice; \n\t}\n\n\tmodifier notSubscribed {\n\t\trequire(subscriptions[msg.sender].expiration == 0 || subscriptions[msg.sender].expiration < block.timestamp, \"Already subscribed.\");\n\t\t_;\n\t}\n\n\tmodifier subscribed {\n\t\trequire(subscriptions[msg.sender].expiration != 0 || subscriptions[msg.sender].expiration > block.timestamp, \"Not subscribed.\");\n\t\t_;\n\t}\n\n\tmodifier refundActive {\n\t\trequire(subscriptions[msg.sender].expiration - year + gracePeriod > block.timestamp, \"Grace Period Ended.\");\n\t\t_;\n\t}\n    \n\t///@dev Queries ETH/USD price from Chainlink data feed, the feed returns multiple items but we only need \"answer\"\n\tfunction getETHUSDPrice() \n\t\tinternal \n\t\tview \n\t\treturns (int256) {\n\t\t\t(\n\t\t\t\t\t, int256 answer, , ,\n\t\t\t) = ETHUSDPriceFeed.latestRoundData();\n\t\t\treturn answer / 1e8;\n\t\t}\n\n\t/// @dev Uses Chainlink data to calculate price of a subscription, DAI has 18 decimals, so multiplying the price by 1e18\n\tfunction calculateETHPrice()\n\t\tpublic \n\t\tview\n\t\treturns (uint256) {\n\t\t\tint256 ethPrice = getETHUSDPrice();\n\t\t\treturn subscriptionPrice * 1e18 / uint256(ethPrice);\n\t\t}\n\n\t/// @notice Checks whether a sender has enough ETH and if yes accepts payment and makes a new subscription\n\t/// @dev Accepts only the exact amount to avoid the need to send funds back\n\tfunction subscribeETH() \n\t\texternal \n\t\tpayable \n\t\tnotSubscribed {\n\t\t\trequire(msg.value == calculateETHPrice(), \"Please, pay the exact amount in ETH.\");\n\n\t\t\tsubscriptions[msg.sender].expiration = block.timestamp + year;\n\t\t\tsubscriptions[msg.sender].currency = Currency.ETH;\n\t\t\tsubscriptions[msg.sender].balance = msg.value;\n\n\t\t\temit Subscribed(msg.sender);\n    }\n\n\t/// @notice Checks whether a sender has enough DAI and if yes accepts payment and makes a new subscription\n\t/// @dev Prevent an unnecessary call to DAI contract in the case of not enough funds with \"require\"\n\tfunction subscribeDAI() \n\t\texternal \n\t\tnotSubscribed {\n\t\t\trequire(dai.balanceOf(msg.sender) >= subscriptionPrice * 1e18, \"You don't have enough DAI.\");\n\n\t\t\tdai.transferFrom(msg.sender, address(this), subscriptionPrice * 1e18);\n\t\t\tsubscriptions[msg.sender].expiration = block.timestamp + year;\n\t\t\tsubscriptions[msg.sender].currency = Currency.DAI;\n\t\t\tsubscriptions[msg.sender].balance = subscriptionPrice * 1e18;\n\n\t\t\temit Subscribed(msg.sender);\n    }\n\n\t/// @notice Mint an NFT that represents a lifetime subscription\n\t/// @dev The NFT minter will be a separate contract\n\tfunction subscribeLifetime() external {\n\t\t// TODO: create an external NFT minter an a function that calls it and updates state.\n\t}\n\n\t/// @notice Checks whether an address is subscribed\n\t/// @param subscriber ETH address being checked\n\tfunction isSubscribed(address subscriber) \n\t\tpublic \n\t\tview \n\t\treturns(bool) {\n\t\t\tif (subscriptions[subscriber].expiration == 0 || subscriptions[subscriber].expiration < block.timestamp)\n\t\t\t\treturn false;\n\t\t\telse\n\t\t\t\treturn true;\n\t}\n\n\t/// @notice Checks whether an address is subscribed and the grace period of 30 days isn't over, then refunds\n\t/// @dev Uses checks-effects-interactions pattern to prevent re-entrancy\n\tfunction requestRefund() \n\t\texternal \n\t\tsubscribed \n\t\trefundActive {\n\t\t\tuint256 refundAmount = subscriptions[msg.sender].balance;\n\n\t\t\tsubscriptions[msg.sender].balance = 0;\n\t\t\tsubscriptions[msg.sender].expiration = 0;\n\n\t\t\tif (subscriptions[msg.sender].currency == Currency.ETH) {\n\t\t\t\t\t(bool sent, ) = msg.sender.call{value: refundAmount}(\"\");\n\t\t\t\t\trequire(sent, \"Failed to Refund\");\n\t\t\t} else if (subscriptions[msg.sender].currency == Currency.DAI) {\n\t\t\t\t\tdai.transfer(msg.sender, refundAmount);\n\t\t\t}\n\t\t}\n\n\t/// @notice Lets the owner to update the yearly price in USD\n\t/// @param _subscriptionPrice New subscription price\n\tfunction updatePrice(uint256 _subscriptionPrice)\n\t\texternal\n\t\tonlyOwner {\n\t\t\tsubscriptionPrice = _subscriptionPrice;\n\t\t}\n\t\t\n\t/// @notice Lets the owner to withdraw funds\n\t/// @dev Prevents unnecessary call to DAI if the contract doesn't hold DAI\n\tfunction withdraw() \n\t\t\texternal \n\t\t\tonlyOwner {\n\t\t\t\t(bool sent, ) = owner().call{value: address(this).balance}(\"\");\n\t\t\t\trequire(sent, \"Failed to withdraw\");\n\t\t\t\tif (dai.balanceOf(address(this)) > 0)\n\t\t\t\t\tdai.transfer(msg.sender, dai.balanceOf(address(this)));\n\t\t}\n}",
  "sourcePath": "/Users/toha-kartoha/Desktop/latest_code_desktop/blockchain-developer-bootcamp-final-project/contracts/CBAuth.sol",
  "ast": {
    "absolutePath": "project:/contracts/CBAuth.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "CBAuth": [
        732
      ],
      "Context": [
        249
      ],
      "IERC20": [
        227
      ],
      "Ownable": [
        149
      ]
    },
    "id": 733,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 251,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 252,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 228,
        "src": "61:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 253,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 150,
        "src": "118:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 254,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 46,
        "src": "171:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 256,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 149,
              "src": "484:7:4"
            },
            "id": 257,
            "nodeType": "InheritanceSpecifier",
            "src": "484:7:4"
          }
        ],
        "contractDependencies": [
          149,
          249
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 255,
          "nodeType": "StructuredDocumentation",
          "src": "249:216:4",
          "text": "@title Crypto Briefing User Authentication\n @author Anton Tarasov\n @notice Enables users to get access to SIMETRI via ETH or a stablecoin\n @dev Lifetime subsription via an NFT minter will be implemented"
        },
        "fullyImplemented": true,
        "id": 732,
        "linearizedBaseContracts": [
          732,
          149,
          249
        ],
        "name": "CBAuth",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 258,
              "nodeType": "StructuredDocumentation",
              "src": "496:109:4",
              "text": "@notice Emitted when a person is subscribed for the service\n @param subscriber Subscriber ETH address"
            },
            "id": 262,
            "name": "Subscribed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "624:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:20:4"
            },
            "src": "607:37:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 263,
              "nodeType": "StructuredDocumentation",
              "src": "647:93:4",
              "text": "@notice Emitted when a person gets a refund\n @param subscriber Subscriber ETH address"
            },
            "id": 267,
            "name": "Refunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "757:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:20:4"
            },
            "src": "742:35:4"
          },
          {
            "constant": false,
            "documentation": {
              "id": 268,
              "nodeType": "StructuredDocumentation",
              "src": "780:74:4",
              "text": "@notice Subscription price is in USD\n @dev Assigned in constructor"
            },
            "functionSelector": "bdc8e54c",
            "id": 270,
            "mutability": "mutable",
            "name": "subscriptionPrice",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "856:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 269,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "892:105:4",
              "text": "@dev Lengths of subscription and grace period in seconds for tracking expiration & refund eligibility"
            },
            "id": 274,
            "mutability": "mutable",
            "name": "year",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "999:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 272,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "999:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3331353336303030",
              "id": 273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1023:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31536000_by_1",
                "typeString": "int_const 31536000"
              },
              "value": "31536000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 277,
            "mutability": "mutable",
            "name": "gracePeriod",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1034:38:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1034:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32353932303030",
              "id": 276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1065:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "value": "2592000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "1076:50:4",
              "text": "@dev IERC20 interface for interacting with DAI"
            },
            "id": 281,
            "mutability": "mutable",
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1128:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$227",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 280,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 279,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 227,
                "src": "1128:6:4"
              },
              "referencedDeclaration": 227,
              "src": "1128:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$227",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "1151:64:4",
              "text": "@dev Chainlink interface for getting the price of ETH in USD"
            },
            "id": 285,
            "mutability": "mutable",
            "name": "ETHUSDPriceFeed",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1217:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 284,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 283,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1217:21:4"
              },
              "referencedDeclaration": 45,
              "src": "1217:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CBAuth.Currency",
            "id": 288,
            "members": [
              {
                "id": 286,
                "name": "ETH",
                "nodeType": "EnumValue",
                "src": "1372:3:4"
              },
              {
                "id": 287,
                "name": "DAI",
                "nodeType": "EnumValue",
                "src": "1377:3:4"
              }
            ],
            "name": "Currency",
            "nodeType": "EnumDefinition",
            "src": "1356:26:4"
          },
          {
            "constant": true,
            "id": 293,
            "mutability": "constant",
            "name": "defaultChoice",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1384:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Currency_$288",
              "typeString": "enum CBAuth.Currency"
            },
            "typeName": {
              "id": 290,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 289,
                "name": "Currency",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 288,
                "src": "1384:8:4"
              },
              "referencedDeclaration": 288,
              "src": "1384:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Currency_$288",
                "typeString": "enum CBAuth.Currency"
              }
            },
            "value": {
              "expression": {
                "id": 291,
                "name": "Currency",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 288,
                "src": "1418:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                  "typeString": "type(enum CBAuth.Currency)"
                }
              },
              "id": 292,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "ETH",
              "nodeType": "MemberAccess",
              "src": "1418:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Currency_$288",
                "typeString": "enum CBAuth.Currency"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CBAuth.Subscription",
            "id": 301,
            "members": [
              {
                "constant": false,
                "id": 295,
                "mutability": "mutable",
                "name": "expiration",
                "nodeType": "VariableDeclaration",
                "scope": 301,
                "src": "1547:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 294,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1547:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 298,
                "mutability": "mutable",
                "name": "currency",
                "nodeType": "VariableDeclaration",
                "scope": 301,
                "src": "1569:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Currency_$288",
                  "typeString": "enum CBAuth.Currency"
                },
                "typeName": {
                  "id": 297,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 296,
                    "name": "Currency",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 288,
                    "src": "1569:8:4"
                  },
                  "referencedDeclaration": 288,
                  "src": "1569:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Currency_$288",
                    "typeString": "enum CBAuth.Currency"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 300,
                "mutability": "mutable",
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 301,
                "src": "1590:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 299,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1590:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Subscription",
            "nodeType": "StructDefinition",
            "scope": 732,
            "src": "1523:86:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 302,
              "nodeType": "StructuredDocumentation",
              "src": "1612:94:4",
              "text": "@notice Information about each ETH address subscription, all zeroes means \"not subscribed\""
            },
            "functionSelector": "f046395a",
            "id": 307,
            "mutability": "mutable",
            "name": "subscriptions",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1708:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
              "typeString": "mapping(address => struct CBAuth.Subscription)"
            },
            "typeName": {
              "id": 306,
              "keyType": {
                "id": 303,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1716:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1708:30:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                "typeString": "mapping(address => struct CBAuth.Subscription)"
              },
              "valueType": {
                "id": 305,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 304,
                  "name": "Subscription",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 301,
                  "src": "1725:12:4"
                },
                "referencedDeclaration": 301,
                "src": "1725:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Subscription_$301_storage_ptr",
                  "typeString": "struct CBAuth.Subscription"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "2107:138:4",
              "statements": [
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 317,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "2112:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$227",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 319,
                          "name": "daiAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "2125:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 318,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "2118:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$227_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2118:18:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$227",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2112:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$227",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:24:4"
                },
                {
                  "expression": {
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "ETHUSDPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "2141:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 325,
                          "name": "ethUsdOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "2181:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 324,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2159:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2159:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2141:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:53:4"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 329,
                      "name": "subscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "2199:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 330,
                      "name": "initSubscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "2219:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2199:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:41:4"
                }
              ]
            },
            "documentation": {
              "id": 308,
              "nodeType": "StructuredDocumentation",
              "src": "1763:257:4",
              "text": "@param daiAddress Address of the DAI contract\n @param ethUsdOracle Address of Chainlink data feed\n @param initSubscriptionPrice Sets initial price of a subscription in USD w/o decimals\n @dev Had to use USDT contract on Rinkeby instead of DAI"
            },
            "id": 334,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "daiAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "2034:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "ethUsdOracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "2054:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "initSubscriptionPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "2076:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:73:4"
            },
            "returnParameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:0:4"
            },
            "scope": 732,
            "src": "2022:223:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "2271:144:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 337,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2283:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 340,
                              "indexExpression": {
                                "expression": {
                                  "id": 338,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2297:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2297:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2283:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2283:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2323:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2283:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 344,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2328:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 347,
                              "indexExpression": {
                                "expression": {
                                  "id": 345,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2342:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2342:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2328:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2328:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 349,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2367:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2367:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2328:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2283:99:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920737562736372696265642e",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d",
                          "typeString": "literal_string \"Already subscribed.\""
                        },
                        "value": "Already subscribed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d",
                          "typeString": "literal_string \"Already subscribed.\""
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2275:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:131:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:131:4"
                },
                {
                  "id": 356,
                  "nodeType": "PlaceholderStatement",
                  "src": "2410:1:4"
                }
              ]
            },
            "id": 358,
            "name": "notSubscribed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:0:4"
            },
            "src": "2248:167:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "2438:140:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 361,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2450:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 364,
                              "indexExpression": {
                                "expression": {
                                  "id": 362,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2464:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2464:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2450:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2450:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2490:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2450:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 368,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2495:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 371,
                              "indexExpression": {
                                "expression": {
                                  "id": 369,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2509:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2509:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2495:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2495:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 373,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2534:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2534:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2495:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2450:99:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420737562736372696265642e",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2551:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44",
                          "typeString": "literal_string \"Not subscribed.\""
                        },
                        "value": "Not subscribed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44",
                          "typeString": "literal_string \"Not subscribed.\""
                        }
                      ],
                      "id": 360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2442:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:127:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:127:4"
                },
                {
                  "id": 380,
                  "nodeType": "PlaceholderStatement",
                  "src": "2573:1:4"
                }
              ]
            },
            "id": 382,
            "name": "subscribed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2438:0:4"
            },
            "src": "2418:160:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "2603:120:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 385,
                                  "name": "subscriptions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "2615:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                    "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                  }
                                },
                                "id": 388,
                                "indexExpression": {
                                  "expression": {
                                    "id": 386,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2629:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2629:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2615:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                  "typeString": "struct CBAuth.Subscription storage ref"
                                }
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "expiration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 295,
                              "src": "2615:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 390,
                              "name": "year",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "2654:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2615:43:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 392,
                            "name": "gracePeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "2661:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2615:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 394,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2675:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2675:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2615:75:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "477261636520506572696f6420456e6465642e",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2692:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c",
                          "typeString": "literal_string \"Grace Period Ended.\""
                        },
                        "value": "Grace Period Ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c",
                          "typeString": "literal_string \"Grace Period Ended.\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2607:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:107:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:107:4"
                },
                {
                  "id": 400,
                  "nodeType": "PlaceholderStatement",
                  "src": "2718:1:4"
                }
              ]
            },
            "id": 402,
            "name": "refundActive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:0:4"
            },
            "src": "2581:142:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "2911:102:4",
              "statements": [
                {
                  "assignments": [
                    null,
                    409,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "2925:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2925:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 413,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 410,
                        "name": "ETHUSDPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "2951:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2951:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2951:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2916:68:4"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 414,
                      "name": "answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "2996:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "316538",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3005:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "1e8"
                    },
                    "src": "2996:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 407,
                  "id": 417,
                  "nodeType": "Return",
                  "src": "2989:19:4"
                }
              ]
            },
            "documentation": {
              "id": 403,
              "nodeType": "StructuredDocumentation",
              "src": "2730:113:4",
              "text": "@dev Queries ETH/USD price from Chainlink data feed, the feed returns multiple items but we only need \"answer\""
            },
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getETHUSDPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2868:2:4"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2903:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2902:8:4"
            },
            "scope": 732,
            "src": "2845:168:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3204:100:4",
              "statements": [
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "ethPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "3209:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3209:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 427,
                      "name": "getETHUSDPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "3227:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:16:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3209:34:4"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 430,
                        "name": "subscriptionPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "3255:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3275:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "3255:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 435,
                          "name": "ethPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "3290:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3282:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3282:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3282:17:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3255:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 424,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "3248:51:4"
                }
              ]
            },
            "documentation": {
              "id": 420,
              "nodeType": "StructuredDocumentation",
              "src": "3016:120:4",
              "text": "@dev Uses Chainlink data to calculate price of a subscription, DAI has 18 decimals, so multiplying the price by 1e18"
            },
            "functionSelector": "6de4f86e",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateETHPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3164:2:4"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3195:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3194:9:4"
            },
            "scope": 732,
            "src": "3138:166:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
              "src": "3556:297:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 447,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3569:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3569:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 449,
                            "name": "calculateETHPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "3582:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3582:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3569:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652c207061792074686520657861637420616d6f756e7420696e204554482e",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3603:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee",
                          "typeString": "literal_string \"Please, pay the exact amount in ETH.\""
                        },
                        "value": "Please, pay the exact amount in ETH."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee",
                          "typeString": "literal_string \"Please, pay the exact amount in ETH.\""
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3561:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3561:81:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "3561:81:4"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 455,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3648:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 458,
                        "indexExpression": {
                          "expression": {
                            "id": 456,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3662:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3662:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3648:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "3648:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 460,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3687:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3687:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 462,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "3705:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3687:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3648:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:61:4"
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 466,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3714:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "expression": {
                            "id": 467,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3728:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3728:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3714:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "3714:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 471,
                        "name": "Currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "3751:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                          "typeString": "type(enum CBAuth.Currency)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "src": "3751:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "src": "3714:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Currency_$288",
                      "typeString": "enum CBAuth.Currency"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3714:49:4"
                },
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 475,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3768:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 478,
                        "indexExpression": {
                          "expression": {
                            "id": 476,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3782:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3782:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3768:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "3768:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 480,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3804:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3804:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3768:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:45:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 485,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3835:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3835:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 484,
                      "name": "Subscribed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "3824:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3824:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "EmitStatement",
                  "src": "3819:27:4"
                }
              ]
            },
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "3307:183:4",
              "text": "@notice Checks whether a sender has enough ETH and if yes accepts payment and makes a new subscription\n @dev Accepts only the exact amount to avoid the need to send funds back"
            },
            "functionSelector": "e210e0ef",
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 444,
                "modifierName": {
                  "id": 443,
                  "name": "notSubscribed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 358,
                  "src": "3542:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3542:13:4"
              }
            ],
            "name": "subscribeETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3513:2:4"
            },
            "returnParameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3556:0:4"
            },
            "scope": 732,
            "src": "3492:361:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "4118:397:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 499,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4145:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4145:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 497,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4131:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$227",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "4131:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4131:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 502,
                            "name": "subscriptionPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 270,
                            "src": "4160:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4180:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "4160:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4131:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204441492e",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4186:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c",
                          "typeString": "literal_string \"You don't have enough DAI.\""
                        },
                        "value": "You don't have enough DAI."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c",
                          "typeString": "literal_string \"You don't have enough DAI.\""
                        }
                      ],
                      "id": 496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4123:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4123:92:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "4123:92:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 512,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4238:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4238:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 516,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4258:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CBAuth_$732",
                              "typeString": "contract CBAuth"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CBAuth_$732",
                              "typeString": "contract CBAuth"
                            }
                          ],
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4250:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 514,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4250:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4250:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 518,
                          "name": "subscriptionPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "4265:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4285:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4265:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 509,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "4221:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 208,
                      "src": "4221:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:69:4"
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 523,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4295:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 526,
                        "indexExpression": {
                          "expression": {
                            "id": 524,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4309:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4309:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4295:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "4295:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 528,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4334:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4334:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 530,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "4352:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4334:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4295:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "4295:61:4"
                },
                {
                  "expression": {
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 534,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4361:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 537,
                        "indexExpression": {
                          "expression": {
                            "id": 535,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4375:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4375:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4361:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "4361:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 539,
                        "name": "Currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4398:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                          "typeString": "type(enum CBAuth.Currency)"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DAI",
                      "nodeType": "MemberAccess",
                      "src": "4398:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "src": "4361:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Currency_$288",
                      "typeString": "enum CBAuth.Currency"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:49:4"
                },
                {
                  "expression": {
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 543,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4415:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 546,
                        "indexExpression": {
                          "expression": {
                            "id": 544,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4429:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4429:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4415:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "4415:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 548,
                        "name": "subscriptionPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "4451:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4471:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "4451:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4415:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:60:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 554,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4497:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4497:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 553,
                      "name": "Subscribed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "4486:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4486:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "EmitStatement",
                  "src": "4481:27:4"
                }
              ]
            },
            "documentation": {
              "id": 491,
              "nodeType": "StructuredDocumentation",
              "src": "3856:207:4",
              "text": "@notice Checks whether a sender has enough DAI and if yes accepts payment and makes a new subscription\n @dev Prevent an unnecessary call to DAI contract in the case of not enough funds with \"require\""
            },
            "functionSelector": "c2e06367",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 494,
                "modifierName": {
                  "id": 493,
                  "name": "notSubscribed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 358,
                  "src": "4104:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4104:13:4"
              }
            ],
            "name": "subscribeDAI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4086:2:4"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4118:0:4"
            },
            "scope": 732,
            "src": "4065:450:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "4674:92:4",
              "statements": []
            },
            "documentation": {
              "id": 560,
              "nodeType": "StructuredDocumentation",
              "src": "4518:116:4",
              "text": "@notice Mint an NFT that represents a lifetime subscription\n @dev The NFT minter will be a separate contract"
            },
            "functionSelector": "c57396d3",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscribeLifetime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4662:2:4"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4674:0:4"
            },
            "scope": 732,
            "src": "4636:130:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "4948:155:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 572,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "4957:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                              "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                            }
                          },
                          "id": 574,
                          "indexExpression": {
                            "id": 573,
                            "name": "subscriber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "4971:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4957:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$301_storage",
                            "typeString": "struct CBAuth.Subscription storage ref"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 295,
                        "src": "4957:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4997:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4957:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 578,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "5002:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                              "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "id": 579,
                            "name": "subscriber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "5016:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5002:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$301_storage",
                            "typeString": "struct CBAuth.Subscription storage ref"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 295,
                        "src": "5002:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 582,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5041:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5041:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5002:54:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4957:99:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5095:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 571,
                    "id": 589,
                    "nodeType": "Return",
                    "src": "5088:11:4"
                  },
                  "id": 590,
                  "nodeType": "IfStatement",
                  "src": "4953:146:4",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5069:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 571,
                    "id": 587,
                    "nodeType": "Return",
                    "src": "5062:12:4"
                  }
                }
              ]
            },
            "documentation": {
              "id": 565,
              "nodeType": "StructuredDocumentation",
              "src": "4769:100:4",
              "text": "@notice Checks whether an address is subscribed\n @param subscriber ETH address being checked"
            },
            "functionSelector": "b92ae87c",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSubscribed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "4893:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4893:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4892:20:4"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "4942:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4941:6:4"
            },
            "scope": 732,
            "src": "4871:232:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "5357:437:4",
              "statements": [
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "refundAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "5362:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5362:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 602,
                        "name": "subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "5385:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                          "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "expression": {
                          "id": 603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5399:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5399:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5385:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subscription_$301_storage",
                        "typeString": "struct CBAuth.Subscription storage ref"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 300,
                    "src": "5385:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5362:56:4"
                },
                {
                  "expression": {
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 608,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "5424:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 611,
                        "indexExpression": {
                          "expression": {
                            "id": 609,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5438:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5438:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5424:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "5424:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5460:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5424:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "5424:37:4"
                },
                {
                  "expression": {
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 616,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "5466:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 619,
                        "indexExpression": {
                          "expression": {
                            "id": 617,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5480:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5480:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5466:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "5466:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5505:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5466:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "5466:40:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Currency_$288",
                      "typeString": "enum CBAuth.Currency"
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 624,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "5516:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 627,
                        "indexExpression": {
                          "expression": {
                            "id": 625,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5530:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5530:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5516:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "5516:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 629,
                        "name": "Currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "5554:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                          "typeString": "type(enum CBAuth.Currency)"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "src": "5554:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "src": "5516:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 648,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "5687:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                              "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                            }
                          },
                          "id": 651,
                          "indexExpression": {
                            "expression": {
                              "id": 649,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5701:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5701:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5687:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$301_storage",
                            "typeString": "struct CBAuth.Subscription storage ref"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 298,
                        "src": "5687:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Currency_$288",
                          "typeString": "enum CBAuth.Currency"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 653,
                          "name": "Currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "5725:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                            "typeString": "type(enum CBAuth.Currency)"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "DAI",
                        "nodeType": "MemberAccess",
                        "src": "5725:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Currency_$288",
                          "typeString": "enum CBAuth.Currency"
                        }
                      },
                      "src": "5687:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 665,
                    "nodeType": "IfStatement",
                    "src": "5683:107:4",
                    "trueBody": {
                      "id": 664,
                      "nodeType": "Block",
                      "src": "5739:51:4",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 659,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5759:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5759:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 661,
                                "name": "refundAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "5771:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 656,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "5746:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$227",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 176,
                              "src": "5746:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5746:38:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 663,
                          "nodeType": "ExpressionStatement",
                          "src": "5746:38:4"
                        }
                      ]
                    }
                  },
                  "id": 666,
                  "nodeType": "IfStatement",
                  "src": "5512:278:4",
                  "trueBody": {
                    "id": 647,
                    "nodeType": "Block",
                    "src": "5568:109:4",
                    "statements": [
                      {
                        "assignments": [
                          633,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 633,
                            "mutability": "mutable",
                            "name": "sent",
                            "nodeType": "VariableDeclaration",
                            "scope": 647,
                            "src": "5576:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 632,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5576:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 641,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5628:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 634,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5591:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5591:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5591:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 637,
                                "name": "refundAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "5614:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5591:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5591:40:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5575:56:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 643,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "5646:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f20526566756e64",
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5652:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a",
                                "typeString": "literal_string \"Failed to Refund\""
                              },
                              "value": "Failed to Refund"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a",
                                "typeString": "literal_string \"Failed to Refund\""
                              }
                            ],
                            "id": 642,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5638:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5638:33:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 646,
                        "nodeType": "ExpressionStatement",
                        "src": "5638:33:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 593,
              "nodeType": "StructuredDocumentation",
              "src": "5106:182:4",
              "text": "@notice Checks whether an address is subscribed and the grace period of 30 days isn't over, then refunds\n @dev Uses checks-effects-interactions pattern to prevent re-entrancy"
            },
            "functionSelector": "d5cef133",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 596,
                "modifierName": {
                  "id": 595,
                  "name": "subscribed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 382,
                  "src": "5330:10:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5330:10:4"
              },
              {
                "id": 598,
                "modifierName": {
                  "id": 597,
                  "name": "refundActive",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 402,
                  "src": "5344:12:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5344:12:4"
              }
            ],
            "name": "requestRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5312:2:4"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5357:0:4"
            },
            "scope": 732,
            "src": "5290:504:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "5985:48:4",
              "statements": [
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 676,
                      "name": "subscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "5990:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 677,
                      "name": "_subscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "6010:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5990:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:38:4"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "5797:114:4",
              "text": "@notice Lets the owner to update the yearly price in USD\n @param _subscriptionPrice New subscription price"
            },
            "functionSelector": "8d6cc56d",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 674,
                "modifierName": {
                  "id": 673,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "5975:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5975:9:4"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "_subscriptionPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "5934:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5934:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5933:28:4"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5985:0:4"
            },
            "scope": 732,
            "src": "5913:120:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "6207:217:4",
              "statements": [
                {
                  "assignments": [
                    688,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 688,
                      "mutability": "mutable",
                      "name": "sent",
                      "nodeType": "VariableDeclaration",
                      "scope": 730,
                      "src": "6214:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 687,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6214:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 700,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6272:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 689,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "6229:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6229:7:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6229:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 694,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "6257:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CBAuth_$732",
                                  "typeString": "contract CBAuth"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CBAuth_$732",
                                  "typeString": "contract CBAuth"
                                }
                              ],
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6249:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 692,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6249:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6249:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6249:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6229:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6229:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6213:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "6289:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207769746864726177",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6295:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216",
                          "typeString": "literal_string \"Failed to withdraw\""
                        },
                        "value": "Failed to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216",
                          "typeString": "literal_string \"Failed to withdraw\""
                        }
                      ],
                      "id": 701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6281:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6281:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "6281:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 710,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "6348:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CBAuth_$732",
                                "typeString": "contract CBAuth"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CBAuth_$732",
                                "typeString": "contract CBAuth"
                              }
                            ],
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6340:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6340:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6340:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 706,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "6326:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$227",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 166,
                        "src": "6326:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6326:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6357:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6326:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 729,
                  "nodeType": "IfStatement",
                  "src": "6322:97:4",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 718,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6378:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6378:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 724,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6412:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CBAuth_$732",
                                    "typeString": "contract CBAuth"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CBAuth_$732",
                                    "typeString": "contract CBAuth"
                                  }
                                ],
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6404:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 722,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6404:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6404:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 720,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "6390:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$227",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "6390:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 715,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "6365:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$227",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "6365:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6365:54:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 728,
                    "nodeType": "ExpressionStatement",
                    "src": "6365:54:4"
                  }
                }
              ]
            },
            "documentation": {
              "id": 682,
              "nodeType": "StructuredDocumentation",
              "src": "6038:120:4",
              "text": "@notice Lets the owner to withdraw funds\n @dev Prevents unnecessary call to DAI if the contract doesn't hold DAI"
            },
            "functionSelector": "3ccfd60b",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 685,
                "modifierName": {
                  "id": 684,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "6197:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6197:9:4"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6177:2:4"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6207:0:4"
            },
            "scope": 732,
            "src": "6160:264:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 733,
        "src": "465:5961:4"
      }
    ],
    "src": "37:6389:4"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CBAuth.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "CBAuth": [
        732
      ],
      "Context": [
        249
      ],
      "IERC20": [
        227
      ],
      "Ownable": [
        149
      ]
    },
    "id": 733,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 251,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 252,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 228,
        "src": "61:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 253,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 150,
        "src": "118:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 254,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 46,
        "src": "171:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 256,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 149,
              "src": "484:7:4"
            },
            "id": 257,
            "nodeType": "InheritanceSpecifier",
            "src": "484:7:4"
          }
        ],
        "contractDependencies": [
          149,
          249
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 255,
          "nodeType": "StructuredDocumentation",
          "src": "249:216:4",
          "text": "@title Crypto Briefing User Authentication\n @author Anton Tarasov\n @notice Enables users to get access to SIMETRI via ETH or a stablecoin\n @dev Lifetime subsription via an NFT minter will be implemented"
        },
        "fullyImplemented": true,
        "id": 732,
        "linearizedBaseContracts": [
          732,
          149,
          249
        ],
        "name": "CBAuth",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 258,
              "nodeType": "StructuredDocumentation",
              "src": "496:109:4",
              "text": "@notice Emitted when a person is subscribed for the service\n @param subscriber Subscriber ETH address"
            },
            "id": 262,
            "name": "Subscribed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "624:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:20:4"
            },
            "src": "607:37:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 263,
              "nodeType": "StructuredDocumentation",
              "src": "647:93:4",
              "text": "@notice Emitted when a person gets a refund\n @param subscriber Subscriber ETH address"
            },
            "id": 267,
            "name": "Refunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "757:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:20:4"
            },
            "src": "742:35:4"
          },
          {
            "constant": false,
            "documentation": {
              "id": 268,
              "nodeType": "StructuredDocumentation",
              "src": "780:74:4",
              "text": "@notice Subscription price is in USD\n @dev Assigned in constructor"
            },
            "functionSelector": "bdc8e54c",
            "id": 270,
            "mutability": "mutable",
            "name": "subscriptionPrice",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "856:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 269,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "892:105:4",
              "text": "@dev Lengths of subscription and grace period in seconds for tracking expiration & refund eligibility"
            },
            "id": 274,
            "mutability": "mutable",
            "name": "year",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "999:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 272,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "999:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3331353336303030",
              "id": 273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1023:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31536000_by_1",
                "typeString": "int_const 31536000"
              },
              "value": "31536000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 277,
            "mutability": "mutable",
            "name": "gracePeriod",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1034:38:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1034:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32353932303030",
              "id": 276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1065:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "value": "2592000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "1076:50:4",
              "text": "@dev IERC20 interface for interacting with DAI"
            },
            "id": 281,
            "mutability": "mutable",
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1128:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$227",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 280,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 279,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 227,
                "src": "1128:6:4"
              },
              "referencedDeclaration": 227,
              "src": "1128:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$227",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "1151:64:4",
              "text": "@dev Chainlink interface for getting the price of ETH in USD"
            },
            "id": 285,
            "mutability": "mutable",
            "name": "ETHUSDPriceFeed",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1217:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 284,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 283,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1217:21:4"
              },
              "referencedDeclaration": 45,
              "src": "1217:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CBAuth.Currency",
            "id": 288,
            "members": [
              {
                "id": 286,
                "name": "ETH",
                "nodeType": "EnumValue",
                "src": "1372:3:4"
              },
              {
                "id": 287,
                "name": "DAI",
                "nodeType": "EnumValue",
                "src": "1377:3:4"
              }
            ],
            "name": "Currency",
            "nodeType": "EnumDefinition",
            "src": "1356:26:4"
          },
          {
            "constant": true,
            "id": 293,
            "mutability": "constant",
            "name": "defaultChoice",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1384:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Currency_$288",
              "typeString": "enum CBAuth.Currency"
            },
            "typeName": {
              "id": 290,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 289,
                "name": "Currency",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 288,
                "src": "1384:8:4"
              },
              "referencedDeclaration": 288,
              "src": "1384:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Currency_$288",
                "typeString": "enum CBAuth.Currency"
              }
            },
            "value": {
              "expression": {
                "id": 291,
                "name": "Currency",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 288,
                "src": "1418:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                  "typeString": "type(enum CBAuth.Currency)"
                }
              },
              "id": 292,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "ETH",
              "nodeType": "MemberAccess",
              "src": "1418:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Currency_$288",
                "typeString": "enum CBAuth.Currency"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CBAuth.Subscription",
            "id": 301,
            "members": [
              {
                "constant": false,
                "id": 295,
                "mutability": "mutable",
                "name": "expiration",
                "nodeType": "VariableDeclaration",
                "scope": 301,
                "src": "1547:18:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 294,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1547:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 298,
                "mutability": "mutable",
                "name": "currency",
                "nodeType": "VariableDeclaration",
                "scope": 301,
                "src": "1569:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Currency_$288",
                  "typeString": "enum CBAuth.Currency"
                },
                "typeName": {
                  "id": 297,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 296,
                    "name": "Currency",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 288,
                    "src": "1569:8:4"
                  },
                  "referencedDeclaration": 288,
                  "src": "1569:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Currency_$288",
                    "typeString": "enum CBAuth.Currency"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 300,
                "mutability": "mutable",
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 301,
                "src": "1590:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 299,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1590:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Subscription",
            "nodeType": "StructDefinition",
            "scope": 732,
            "src": "1523:86:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 302,
              "nodeType": "StructuredDocumentation",
              "src": "1612:94:4",
              "text": "@notice Information about each ETH address subscription, all zeroes means \"not subscribed\""
            },
            "functionSelector": "f046395a",
            "id": 307,
            "mutability": "mutable",
            "name": "subscriptions",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "1708:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
              "typeString": "mapping(address => struct CBAuth.Subscription)"
            },
            "typeName": {
              "id": 306,
              "keyType": {
                "id": 303,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1716:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1708:30:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                "typeString": "mapping(address => struct CBAuth.Subscription)"
              },
              "valueType": {
                "id": 305,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 304,
                  "name": "Subscription",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 301,
                  "src": "1725:12:4"
                },
                "referencedDeclaration": 301,
                "src": "1725:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Subscription_$301_storage_ptr",
                  "typeString": "struct CBAuth.Subscription"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "2107:138:4",
              "statements": [
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 317,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "2112:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$227",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 319,
                          "name": "daiAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "2125:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 318,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "2118:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$227_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2118:18:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$227",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2112:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$227",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:24:4"
                },
                {
                  "expression": {
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "ETHUSDPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "2141:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 325,
                          "name": "ethUsdOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "2181:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 324,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2159:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2159:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2141:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:53:4"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 329,
                      "name": "subscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "2199:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 330,
                      "name": "initSubscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "2219:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2199:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:41:4"
                }
              ]
            },
            "documentation": {
              "id": 308,
              "nodeType": "StructuredDocumentation",
              "src": "1763:257:4",
              "text": "@param daiAddress Address of the DAI contract\n @param ethUsdOracle Address of Chainlink data feed\n @param initSubscriptionPrice Sets initial price of a subscription in USD w/o decimals\n @dev Had to use USDT contract on Rinkeby instead of DAI"
            },
            "id": 334,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "daiAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "2034:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "ethUsdOracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "2054:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "initSubscriptionPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "2076:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:73:4"
            },
            "returnParameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:0:4"
            },
            "scope": 732,
            "src": "2022:223:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "2271:144:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 337,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2283:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 340,
                              "indexExpression": {
                                "expression": {
                                  "id": 338,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2297:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2297:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2283:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2283:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2323:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2283:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 344,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2328:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 347,
                              "indexExpression": {
                                "expression": {
                                  "id": 345,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2342:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2342:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2328:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2328:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 349,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2367:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2367:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2328:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2283:99:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920737562736372696265642e",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d",
                          "typeString": "literal_string \"Already subscribed.\""
                        },
                        "value": "Already subscribed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2950130c00030dbe8a84005902ebae758d5e243908d00bb4651d35b4d910c14d",
                          "typeString": "literal_string \"Already subscribed.\""
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2275:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:131:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:131:4"
                },
                {
                  "id": 356,
                  "nodeType": "PlaceholderStatement",
                  "src": "2410:1:4"
                }
              ]
            },
            "id": 358,
            "name": "notSubscribed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:0:4"
            },
            "src": "2248:167:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "2438:140:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 361,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2450:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 364,
                              "indexExpression": {
                                "expression": {
                                  "id": 362,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2464:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2464:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2450:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2450:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2490:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2450:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 368,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2495:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                  "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                }
                              },
                              "id": 371,
                              "indexExpression": {
                                "expression": {
                                  "id": 369,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2509:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2509:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2495:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                "typeString": "struct CBAuth.Subscription storage ref"
                              }
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "2495:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 373,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2534:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2534:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2495:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2450:99:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420737562736372696265642e",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2551:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44",
                          "typeString": "literal_string \"Not subscribed.\""
                        },
                        "value": "Not subscribed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfd60426b717524e1e00089c9c7468ac56fb73bf1b8508ef77bb05ada3985f44",
                          "typeString": "literal_string \"Not subscribed.\""
                        }
                      ],
                      "id": 360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2442:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:127:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:127:4"
                },
                {
                  "id": 380,
                  "nodeType": "PlaceholderStatement",
                  "src": "2573:1:4"
                }
              ]
            },
            "id": 382,
            "name": "subscribed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2438:0:4"
            },
            "src": "2418:160:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "2603:120:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 385,
                                  "name": "subscriptions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "2615:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                                    "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                                  }
                                },
                                "id": 388,
                                "indexExpression": {
                                  "expression": {
                                    "id": 386,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2629:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2629:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2615:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$301_storage",
                                  "typeString": "struct CBAuth.Subscription storage ref"
                                }
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "expiration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 295,
                              "src": "2615:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 390,
                              "name": "year",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "2654:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2615:43:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 392,
                            "name": "gracePeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "2661:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2615:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 394,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2675:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2675:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2615:75:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "477261636520506572696f6420456e6465642e",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2692:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c",
                          "typeString": "literal_string \"Grace Period Ended.\""
                        },
                        "value": "Grace Period Ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b79b34682f766f7b32f643194acb729e859ad3a1607dfffd5ff974c73d96cd8c",
                          "typeString": "literal_string \"Grace Period Ended.\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2607:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:107:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:107:4"
                },
                {
                  "id": 400,
                  "nodeType": "PlaceholderStatement",
                  "src": "2718:1:4"
                }
              ]
            },
            "id": 402,
            "name": "refundActive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:0:4"
            },
            "src": "2581:142:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "2911:102:4",
              "statements": [
                {
                  "assignments": [
                    null,
                    409,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "2925:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2925:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 413,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 410,
                        "name": "ETHUSDPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "2951:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2951:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2951:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2916:68:4"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 414,
                      "name": "answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "2996:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "316538",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3005:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "1e8"
                    },
                    "src": "2996:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 407,
                  "id": 417,
                  "nodeType": "Return",
                  "src": "2989:19:4"
                }
              ]
            },
            "documentation": {
              "id": 403,
              "nodeType": "StructuredDocumentation",
              "src": "2730:113:4",
              "text": "@dev Queries ETH/USD price from Chainlink data feed, the feed returns multiple items but we only need \"answer\""
            },
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getETHUSDPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2868:2:4"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2903:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2902:8:4"
            },
            "scope": 732,
            "src": "2845:168:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3204:100:4",
              "statements": [
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "ethPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "3209:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3209:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 427,
                      "name": "getETHUSDPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "3227:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:16:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3209:34:4"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 430,
                        "name": "subscriptionPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "3255:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3275:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "3255:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 435,
                          "name": "ethPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "3290:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3282:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3282:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3282:17:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3255:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 424,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "3248:51:4"
                }
              ]
            },
            "documentation": {
              "id": 420,
              "nodeType": "StructuredDocumentation",
              "src": "3016:120:4",
              "text": "@dev Uses Chainlink data to calculate price of a subscription, DAI has 18 decimals, so multiplying the price by 1e18"
            },
            "functionSelector": "6de4f86e",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateETHPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3164:2:4"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3195:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3194:9:4"
            },
            "scope": 732,
            "src": "3138:166:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
              "src": "3556:297:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 447,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3569:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3569:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 449,
                            "name": "calculateETHPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "3582:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3582:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3569:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652c207061792074686520657861637420616d6f756e7420696e204554482e",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3603:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee",
                          "typeString": "literal_string \"Please, pay the exact amount in ETH.\""
                        },
                        "value": "Please, pay the exact amount in ETH."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30e249c43070122d815487b94e694a5edca11ac097759a95037cb4d83da19bee",
                          "typeString": "literal_string \"Please, pay the exact amount in ETH.\""
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3561:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3561:81:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "3561:81:4"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 455,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3648:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 458,
                        "indexExpression": {
                          "expression": {
                            "id": 456,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3662:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3662:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3648:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "3648:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 460,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3687:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3687:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 462,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "3705:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3687:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3648:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:61:4"
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 466,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3714:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "expression": {
                            "id": 467,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3728:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3728:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3714:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "3714:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 471,
                        "name": "Currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "3751:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                          "typeString": "type(enum CBAuth.Currency)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "src": "3751:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "src": "3714:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Currency_$288",
                      "typeString": "enum CBAuth.Currency"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3714:49:4"
                },
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 475,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3768:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 478,
                        "indexExpression": {
                          "expression": {
                            "id": 476,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3782:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3782:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3768:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "3768:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 480,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3804:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3804:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3768:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:45:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 485,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3835:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3835:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 484,
                      "name": "Subscribed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "3824:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3824:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "EmitStatement",
                  "src": "3819:27:4"
                }
              ]
            },
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "3307:183:4",
              "text": "@notice Checks whether a sender has enough ETH and if yes accepts payment and makes a new subscription\n @dev Accepts only the exact amount to avoid the need to send funds back"
            },
            "functionSelector": "e210e0ef",
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 444,
                "modifierName": {
                  "id": 443,
                  "name": "notSubscribed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 358,
                  "src": "3542:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3542:13:4"
              }
            ],
            "name": "subscribeETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3513:2:4"
            },
            "returnParameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3556:0:4"
            },
            "scope": 732,
            "src": "3492:361:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "4118:397:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 499,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4145:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4145:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 497,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4131:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$227",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "4131:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4131:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 502,
                            "name": "subscriptionPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 270,
                            "src": "4160:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4180:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "4160:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4131:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204441492e",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4186:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c",
                          "typeString": "literal_string \"You don't have enough DAI.\""
                        },
                        "value": "You don't have enough DAI."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30eb835e6cb59140ea01a5effe050201c5372db1a5ed473c1d9bb1979a4be00c",
                          "typeString": "literal_string \"You don't have enough DAI.\""
                        }
                      ],
                      "id": 496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4123:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4123:92:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "4123:92:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 512,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4238:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4238:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 516,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4258:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CBAuth_$732",
                              "typeString": "contract CBAuth"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CBAuth_$732",
                              "typeString": "contract CBAuth"
                            }
                          ],
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4250:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 514,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4250:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4250:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 518,
                          "name": "subscriptionPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "4265:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4285:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "4265:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 509,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "4221:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 208,
                      "src": "4221:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:69:4"
                },
                {
                  "expression": {
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 523,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4295:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 526,
                        "indexExpression": {
                          "expression": {
                            "id": 524,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4309:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4309:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4295:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "4295:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 528,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4334:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4334:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 530,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "4352:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4334:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4295:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "4295:61:4"
                },
                {
                  "expression": {
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 534,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4361:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 537,
                        "indexExpression": {
                          "expression": {
                            "id": 535,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4375:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4375:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4361:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "4361:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 539,
                        "name": "Currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4398:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                          "typeString": "type(enum CBAuth.Currency)"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DAI",
                      "nodeType": "MemberAccess",
                      "src": "4398:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "src": "4361:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Currency_$288",
                      "typeString": "enum CBAuth.Currency"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:49:4"
                },
                {
                  "expression": {
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 543,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4415:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 546,
                        "indexExpression": {
                          "expression": {
                            "id": 544,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4429:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4429:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4415:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "4415:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 548,
                        "name": "subscriptionPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "4451:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4471:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "4451:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4415:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:60:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 554,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4497:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4497:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 553,
                      "name": "Subscribed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "4486:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4486:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "EmitStatement",
                  "src": "4481:27:4"
                }
              ]
            },
            "documentation": {
              "id": 491,
              "nodeType": "StructuredDocumentation",
              "src": "3856:207:4",
              "text": "@notice Checks whether a sender has enough DAI and if yes accepts payment and makes a new subscription\n @dev Prevent an unnecessary call to DAI contract in the case of not enough funds with \"require\""
            },
            "functionSelector": "c2e06367",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 494,
                "modifierName": {
                  "id": 493,
                  "name": "notSubscribed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 358,
                  "src": "4104:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4104:13:4"
              }
            ],
            "name": "subscribeDAI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4086:2:4"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4118:0:4"
            },
            "scope": 732,
            "src": "4065:450:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "4674:92:4",
              "statements": []
            },
            "documentation": {
              "id": 560,
              "nodeType": "StructuredDocumentation",
              "src": "4518:116:4",
              "text": "@notice Mint an NFT that represents a lifetime subscription\n @dev The NFT minter will be a separate contract"
            },
            "functionSelector": "c57396d3",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscribeLifetime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4662:2:4"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4674:0:4"
            },
            "scope": 732,
            "src": "4636:130:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "4948:155:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 572,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "4957:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                              "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                            }
                          },
                          "id": 574,
                          "indexExpression": {
                            "id": 573,
                            "name": "subscriber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "4971:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4957:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$301_storage",
                            "typeString": "struct CBAuth.Subscription storage ref"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 295,
                        "src": "4957:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4997:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4957:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 578,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "5002:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                              "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "id": 579,
                            "name": "subscriber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "5016:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5002:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$301_storage",
                            "typeString": "struct CBAuth.Subscription storage ref"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 295,
                        "src": "5002:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 582,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5041:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5041:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5002:54:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4957:99:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5095:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 571,
                    "id": 589,
                    "nodeType": "Return",
                    "src": "5088:11:4"
                  },
                  "id": 590,
                  "nodeType": "IfStatement",
                  "src": "4953:146:4",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5069:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 571,
                    "id": 587,
                    "nodeType": "Return",
                    "src": "5062:12:4"
                  }
                }
              ]
            },
            "documentation": {
              "id": 565,
              "nodeType": "StructuredDocumentation",
              "src": "4769:100:4",
              "text": "@notice Checks whether an address is subscribed\n @param subscriber ETH address being checked"
            },
            "functionSelector": "b92ae87c",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSubscribed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "4893:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4893:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4892:20:4"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "4942:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4941:6:4"
            },
            "scope": 732,
            "src": "4871:232:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "5357:437:4",
              "statements": [
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "refundAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "5362:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5362:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 602,
                        "name": "subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "5385:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                          "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "expression": {
                          "id": 603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5399:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5399:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5385:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subscription_$301_storage",
                        "typeString": "struct CBAuth.Subscription storage ref"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 300,
                    "src": "5385:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5362:56:4"
                },
                {
                  "expression": {
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 608,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "5424:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 611,
                        "indexExpression": {
                          "expression": {
                            "id": 609,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5438:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5438:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5424:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "5424:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5460:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5424:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "5424:37:4"
                },
                {
                  "expression": {
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 616,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "5466:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 619,
                        "indexExpression": {
                          "expression": {
                            "id": 617,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5480:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5480:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5466:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 295,
                      "src": "5466:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5505:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5466:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "5466:40:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Currency_$288",
                      "typeString": "enum CBAuth.Currency"
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 624,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "5516:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                            "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                          }
                        },
                        "id": 627,
                        "indexExpression": {
                          "expression": {
                            "id": 625,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5530:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5530:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5516:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$301_storage",
                          "typeString": "struct CBAuth.Subscription storage ref"
                        }
                      },
                      "id": 628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "5516:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 629,
                        "name": "Currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "5554:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                          "typeString": "type(enum CBAuth.Currency)"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "src": "5554:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      }
                    },
                    "src": "5516:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Currency_$288",
                        "typeString": "enum CBAuth.Currency"
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 648,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "5687:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$301_storage_$",
                              "typeString": "mapping(address => struct CBAuth.Subscription storage ref)"
                            }
                          },
                          "id": 651,
                          "indexExpression": {
                            "expression": {
                              "id": 649,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5701:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5701:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5687:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$301_storage",
                            "typeString": "struct CBAuth.Subscription storage ref"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 298,
                        "src": "5687:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Currency_$288",
                          "typeString": "enum CBAuth.Currency"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 653,
                          "name": "Currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "5725:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Currency_$288_$",
                            "typeString": "type(enum CBAuth.Currency)"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "DAI",
                        "nodeType": "MemberAccess",
                        "src": "5725:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Currency_$288",
                          "typeString": "enum CBAuth.Currency"
                        }
                      },
                      "src": "5687:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 665,
                    "nodeType": "IfStatement",
                    "src": "5683:107:4",
                    "trueBody": {
                      "id": 664,
                      "nodeType": "Block",
                      "src": "5739:51:4",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 659,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5759:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5759:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 661,
                                "name": "refundAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "5771:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 656,
                                "name": "dai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "5746:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$227",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 176,
                              "src": "5746:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5746:38:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 663,
                          "nodeType": "ExpressionStatement",
                          "src": "5746:38:4"
                        }
                      ]
                    }
                  },
                  "id": 666,
                  "nodeType": "IfStatement",
                  "src": "5512:278:4",
                  "trueBody": {
                    "id": 647,
                    "nodeType": "Block",
                    "src": "5568:109:4",
                    "statements": [
                      {
                        "assignments": [
                          633,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 633,
                            "mutability": "mutable",
                            "name": "sent",
                            "nodeType": "VariableDeclaration",
                            "scope": 647,
                            "src": "5576:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 632,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5576:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 641,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5628:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 634,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5591:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5591:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5591:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 637,
                                "name": "refundAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "5614:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5591:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5591:40:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5575:56:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 643,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "5646:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f20526566756e64",
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5652:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a",
                                "typeString": "literal_string \"Failed to Refund\""
                              },
                              "value": "Failed to Refund"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6c77387a8da260fd9a17f9aa53d73de1a325a65f81ccea89da4379b63e02735a",
                                "typeString": "literal_string \"Failed to Refund\""
                              }
                            ],
                            "id": 642,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5638:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5638:33:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 646,
                        "nodeType": "ExpressionStatement",
                        "src": "5638:33:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 593,
              "nodeType": "StructuredDocumentation",
              "src": "5106:182:4",
              "text": "@notice Checks whether an address is subscribed and the grace period of 30 days isn't over, then refunds\n @dev Uses checks-effects-interactions pattern to prevent re-entrancy"
            },
            "functionSelector": "d5cef133",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 596,
                "modifierName": {
                  "id": 595,
                  "name": "subscribed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 382,
                  "src": "5330:10:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5330:10:4"
              },
              {
                "id": 598,
                "modifierName": {
                  "id": 597,
                  "name": "refundActive",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 402,
                  "src": "5344:12:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5344:12:4"
              }
            ],
            "name": "requestRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5312:2:4"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5357:0:4"
            },
            "scope": 732,
            "src": "5290:504:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "5985:48:4",
              "statements": [
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 676,
                      "name": "subscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "5990:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 677,
                      "name": "_subscriptionPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "6010:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5990:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:38:4"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "5797:114:4",
              "text": "@notice Lets the owner to update the yearly price in USD\n @param _subscriptionPrice New subscription price"
            },
            "functionSelector": "8d6cc56d",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 674,
                "modifierName": {
                  "id": 673,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "5975:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5975:9:4"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "_subscriptionPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "5934:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5934:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5933:28:4"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5985:0:4"
            },
            "scope": 732,
            "src": "5913:120:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "6207:217:4",
              "statements": [
                {
                  "assignments": [
                    688,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 688,
                      "mutability": "mutable",
                      "name": "sent",
                      "nodeType": "VariableDeclaration",
                      "scope": 730,
                      "src": "6214:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 687,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6214:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 700,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6272:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 689,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "6229:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6229:7:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6229:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 694,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "6257:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CBAuth_$732",
                                  "typeString": "contract CBAuth"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CBAuth_$732",
                                  "typeString": "contract CBAuth"
                                }
                              ],
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6249:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 692,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6249:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6249:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6249:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6229:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6229:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6213:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "6289:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207769746864726177",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6295:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216",
                          "typeString": "literal_string \"Failed to withdraw\""
                        },
                        "value": "Failed to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15b5b094ba96751a3c921f4a257a28c0781104fad9fc1c7a0f3086258ee1e216",
                          "typeString": "literal_string \"Failed to withdraw\""
                        }
                      ],
                      "id": 701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6281:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6281:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "6281:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 710,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "6348:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CBAuth_$732",
                                "typeString": "contract CBAuth"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CBAuth_$732",
                                "typeString": "contract CBAuth"
                              }
                            ],
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6340:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6340:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6340:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 706,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "6326:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$227",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 166,
                        "src": "6326:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6326:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6357:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6326:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 729,
                  "nodeType": "IfStatement",
                  "src": "6322:97:4",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 718,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6378:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6378:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 724,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6412:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CBAuth_$732",
                                    "typeString": "contract CBAuth"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CBAuth_$732",
                                    "typeString": "contract CBAuth"
                                  }
                                ],
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6404:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 722,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6404:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6404:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 720,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "6390:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$227",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "6390:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 715,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "6365:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$227",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "6365:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6365:54:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 728,
                    "nodeType": "ExpressionStatement",
                    "src": "6365:54:4"
                  }
                }
              ]
            },
            "documentation": {
              "id": 682,
              "nodeType": "StructuredDocumentation",
              "src": "6038:120:4",
              "text": "@notice Lets the owner to withdraw funds\n @dev Prevents unnecessary call to DAI if the contract doesn't hold DAI"
            },
            "functionSelector": "3ccfd60b",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 685,
                "modifierName": {
                  "id": 684,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "6197:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6197:9:4"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6177:2:4"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6207:0:4"
            },
            "scope": 732,
            "src": "6160:264:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 733,
        "src": "465:5961:4"
      }
    ],
    "src": "37:6389:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "999": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x167242d43394c1ae34826c8d7544822cbe8c1071d221a571aad57cdd2c2a2fd3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "subscriber",
              "type": "address"
            }
          ],
          "name": "Refunded",
          "type": "event"
        },
        "0xa88fac53823b534c72d6958345adbe6801e072750d83b490d52ebbac51473a63": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "subscriber",
              "type": "address"
            }
          ],
          "name": "Subscribed",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc92C9a54a215F35714cB7cC9809D0E4e1D7bb751",
      "transactionHash": "0x69933d670bc7477829b460518bfe466d3afffb632d45d969e8aeb0646309375c"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-30T20:57:10.962Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Anton Tarasov",
    "details": "Lifetime subsription via an NFT minter will be implemented",
    "events": {
      "Refunded(address)": {
        "params": {
          "subscriber": "Subscriber ETH address"
        }
      },
      "Subscribed(address)": {
        "params": {
          "subscriber": "Subscriber ETH address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "calculateETHPrice()": {
        "details": "Uses Chainlink data to calculate price of a subscription, DAI has 18 decimals, so multiplying the price by 1e18"
      },
      "constructor": {
        "details": "Had to use USDT contract on Rinkeby instead of DAI",
        "params": {
          "daiAddress": "Address of the DAI contract",
          "ethUsdOracle": "Address of Chainlink data feed",
          "initSubscriptionPrice": "Sets initial price of a subscription in USD w/o decimals"
        }
      },
      "isSubscribed(address)": {
        "params": {
          "subscriber": "ETH address being checked"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requestRefund()": {
        "details": "Uses checks-effects-interactions pattern to prevent re-entrancy"
      },
      "subscribeDAI()": {
        "details": "Prevent an unnecessary call to DAI contract in the case of not enough funds with \"require\""
      },
      "subscribeETH()": {
        "details": "Accepts only the exact amount to avoid the need to send funds back"
      },
      "subscribeLifetime()": {
        "details": "The NFT minter will be a separate contract"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePrice(uint256)": {
        "params": {
          "_subscriptionPrice": "New subscription price"
        }
      },
      "withdraw()": {
        "details": "Prevents unnecessary call to DAI if the contract doesn't hold DAI"
      }
    },
    "stateVariables": {
      "ETHUSDPriceFeed": {
        "details": "Chainlink interface for getting the price of ETH in USD"
      },
      "dai": {
        "details": "IERC20 interface for interacting with DAI"
      },
      "subscriptionPrice": {
        "details": "Assigned in constructor"
      },
      "year": {
        "details": "Lengths of subscription and grace period in seconds for tracking expiration & refund eligibility"
      }
    },
    "title": "Crypto Briefing User Authentication",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Refunded(address)": {
        "notice": "Emitted when a person gets a refund"
      },
      "Subscribed(address)": {
        "notice": "Emitted when a person is subscribed for the service"
      }
    },
    "kind": "user",
    "methods": {
      "isSubscribed(address)": {
        "notice": "Checks whether an address is subscribed"
      },
      "requestRefund()": {
        "notice": "Checks whether an address is subscribed and the grace period of 30 days isn't over, then refunds"
      },
      "subscribeDAI()": {
        "notice": "Checks whether a sender has enough DAI and if yes accepts payment and makes a new subscription"
      },
      "subscribeETH()": {
        "notice": "Checks whether a sender has enough ETH and if yes accepts payment and makes a new subscription"
      },
      "subscribeLifetime()": {
        "notice": "Mint an NFT that represents a lifetime subscription"
      },
      "subscriptionPrice()": {
        "notice": "Subscription price is in USD"
      },
      "subscriptions(address)": {
        "notice": "Information about each ETH address subscription, all zeroes means \"not subscribed\""
      },
      "updatePrice(uint256)": {
        "notice": "Lets the owner to update the yearly price in USD"
      },
      "withdraw()": {
        "notice": "Lets the owner to withdraw funds"
      }
    },
    "notice": "Enables users to get access to SIMETRI via ETH or a stablecoin",
    "version": 1
  }
}